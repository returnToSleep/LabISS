[
  {
    "Id": "700068",
    "ThreadId": "279972",
    "Html": "<p>Hi</p>\n<p>Im looking at a way to get the distance from CurrentPosition to the drawn route line...</p>\n<p>The idea is that i could detect when i have deviated from the projected route and recalculate a new route.</p>\n<p>&nbsp;</p>\n<p><img src=\"http://mathworld.wolfram.com/images/eps-gif/PointLineDistance2DVec_1000.gif\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>I found this link which i think gives an equation to do what i wanting to do</p>\n<p>http://mathworld.wolfram.com/Point-LineDistance2-Dimensional.html</p>\n<p>&nbsp;</p>\n<p>Technically i know there is a different formula that will take into account that the earth is round not flat but i think the 2d formula will be accurate enough for what i am trying to do.</p>\n<p>&nbsp;</p>\n<p>any help would be great</p>\n<p>I8sy</p>",
    "PostedDate": "2011-11-18T02:19:38.683-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "700599",
    "ThreadId": "279972",
    "Html": "<p>Hi!</p>\r\n<p>Look at this code (to use the Vector class, which also allows to use \"Points\" and Vectors with double precision X and Y values, make sure to reference \"WindowsBase\"):</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span><span style=\"color: green;\"> Returns the point that lies ON a polyline and is closest to a given point.</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;/summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;param name=\"points\"&gt;</span><span style=\"color: green;\">A List of Vectors/Points that define the polyline.&lt;/param&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;param name=\"pos\"&gt;</span><span style=\"color: green;\">The given point.&lt;/param&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;returns&gt;</span><span style=\"color: green;\">Closest point that lies on the polyline.&lt;/returns&gt;</span>\r\n        <span style=\"color: blue;\">private</span> Vector GetClosestPointOnPolyline(List&lt;Vector&gt; points, Vector pos)\r\n        {\r\n            SortedDictionary&lt;<span style=\"color: blue;\">double</span>, Vector&gt; distances = <span style=\"color: blue;\">new</span> SortedDictionary&lt;<span style=\"color: blue;\">double</span>, Vector&gt;();\r\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> i = 0; i &lt; points.Count - 1; i++)\r\n            {\r\n                <span style=\"color: blue;\">double</span> dist;\r\n                <span style=\"color: blue;\">var</span> point =  GetClosestPointOnLinesegment(map, points[i], points[i + 1], pos, <span style=\"color: blue;\">out</span> dist);\r\n                <span style=\"color: blue;\">if</span> (!distances.ContainsKey(dist))\r\n                    distances.Add(dist, point);\r\n            }\r\n            <span style=\"color: blue;\">return</span> distances.First().Value;\r\n        }\r\n</pre>\r\n</div>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: gray;\">        ///</span> <span style=\"color: gray;\">&lt;summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span><span style=\"color: green;\"> Returns the closest Point ON a line segment defined by Points A and B to a given point P, and gets the distance to this point</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;/summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;param name=\"A\"&gt;</span><span style=\"color: green;\">The Startpoint of the linesegment&lt;/param&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;param name=\"B\"&gt;</span><span style=\"color: green;\">The Endpoint of the linesegment&lt;/param&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;param name=\"P\"&gt;</span><span style=\"color: green;\">The given point.&lt;/param&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;param name=\"distance\"&gt;</span><span style=\"color: green;\">The distance from the line segment to P&lt;/param&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;returns&gt;</span><span style=\"color: green;\">Vector (Point) that lies on the linesegement and is closest to P.&lt;/returns&gt;</span>\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> Vector GetClosestPointOnLinesegment(GMapEnhanced.Map map, Vector A, Vector B, Vector P, <span style=\"color: blue;\">out</span> <span style=\"color: blue;\">double</span> distance)\r\n        {\r\n            Vector AP = P - A;\r\n            Vector AB = B - A;\r\n            <span style=\"color: blue;\">double</span> ab2 = AB.LengthSquared;\r\n            <span style=\"color: blue;\">double</span> ap_ab = Vector.Multiply(AP, AB);\r\n            <span style=\"color: blue;\">double</span> t = ap_ab / ab2;\r\n\r\n            <span style=\"color: blue;\">if</span> (t &lt; 0.0f)\r\n                t = 0.0f;\r\n            <span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span> (t &gt; 1.0f)\r\n                t = 1.0f;\r\n            Vector closestPoint = A + AB * t;\r\n\r\n            <span style=\"color: green;\">//Don't use this Length with Lat/Long coordinates!</span>\r\n            <span style=\"color: green;\">//distance = (closestPoint - P).Length;</span>\r\n            distance = map.MapProvider.Projection.GetDistance(<span style=\"color: blue;\">new</span> GMap.NET.PointLatLng(P.Y, P.X), <span style=\"color: blue;\">new</span> GMap.NET.PointLatLng(closestPoint.Y, closestPoint.X));\r\n            <span style=\"color: blue;\">return</span> closestPoint;\r\n        }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-11-19T09:06:58.753-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "700669",
    "ThreadId": "279972",
    "Html": "<p>Hi Xandolph</p>\r\n<p>Thanks for your reply</p>\r\n<p>I just have a question in how to apply the above code</p>\r\n<p>&nbsp;</p>\r\n<p>How do i convert the PointLatLng to a Vector? ( the whole Vector thing is throwing me big time :)</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks I8sy</p>",
    "PostedDate": "2011-11-19T14:28:10.693-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "700714",
    "ThreadId": "279972",
    "Html": "<p>never mind i figured it out</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>\t Vector currentV = <span style=\"color: blue;\">new</span> Vector(Mainmap.Position.Lat, Mainmap.Position.Lng);\r\n</pre>\r\n</div>\r\n</p>\r\n<p>the code works great</p>\r\n<p>Thanks for that</p>",
    "PostedDate": "2011-11-19T17:28:41.537-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]