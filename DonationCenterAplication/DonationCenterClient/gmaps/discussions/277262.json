[
  {
    "Id": "689596",
    "ThreadId": "277262",
    "Html": "\r\n<p><span id=\"result_box\" lang=\"en\"><span>Ð¡an</span> <span>someone</span> <span>\r\nhelp create </span></span>markerclusterer?</p>\r\n<p>http://jqeedu.tuxfamily.org/tools/files/markerclusterer/examples/simple_example.html</p>\r\n",
    "PostedDate": "2011-10-26T06:21:20.58-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "689611",
    "ThreadId": "277262",
    "Html": "<p>http://vremenno.net/files/uploads/map.yandex.clusterer.js.zip this java script&nbsp; clastering marker for yandex map</p>\n<p>and Google claster http://gmaps-utility-library-dev.googlecode.com/svn/tags/markerclusterer/1.0/src/</p>",
    "PostedDate": "2011-10-26T06:57:26.243-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "693233",
    "ThreadId": "277262",
    "Html": "<p><span id=\"result_box\" lang=\"en\"><span class=\"hps\">Here is my code</span> <span class=\"hps\"> clustering</span><span>, I'm</span>&nbsp;<span class=\"hps\"> beginner,</span> <span class=\"hps\"> so</span> <span class=\"hps\">someone</span> <span class=\"hps\">should</span> <span class=\"hps\"> correct the</span> <span class=\"hps\">code</span><span>.</span></span></p>\n<p><a href=\"http://s017.radikal.ru/i414/1111/e0/2c95ba941983.jpg\">http://s017.radikal.ru/i414/1111/e0/2c95ba941983.jpg</a></p>\n<p><a href=\"http://s017.radikal.ru/i425/1111/dc/61df58b0b098.bmp\">http://s017.radikal.ru/i425/1111/dc/61df58b0b098.bmp</a></p>\n<p><a href=\"http://s44.radikal.ru/i103/1111/15/84ce92140003.bmp\">http://s44.radikal.ru/i103/1111/15/84ce92140003.bmp</a></p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre><div style=\"color: black; background-color: white;\"><pre>   <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> MarkerClusterer\n    {\n        List&lt;Cluster&gt; clusters_ = <span style=\"color: blue;\">new</span> List&lt;Cluster&gt;();\n        List&lt;GMapMarker&gt; clusters;\n        Map map_;\n        <span style=\"color: blue;\">int</span> maxZoom_ = 0;\n\n        <span style=\"color: blue;\">int</span> gridSize_ = 60;\n        <span style=\"color: green;\">//var sizes = [53, 56, 66, 78, 90];</span>\n        <span style=\"color: green;\">//var styles_ = [];</span>\n        List&lt;GMapMarker&gt; leftMarkers_ = <span style=\"color: blue;\">new</span> List&lt;GMapMarker&gt;();\n        <span style=\"color: green;\">//var mcfn_ = null;</span>\n        <span style=\"color: blue;\">public</span> GMapOverlay Overlay { <span style=\"color: blue;\">get</span>; <span style=\"color: blue;\">set</span>; }\n\n\n        <span style=\"color: blue;\">public</span> MarkerClusterer(Map MainMap, ObservableCollectionThreadSafe&lt;GMapMarker&gt; opt_markers, GMapOverlay overlay)\n        {\n            maxZoom_ = MainMap.MaxZoom;\n            map_ = MainMap;\n            Overlay = overlay;\n            <span style=\"color: blue;\">if</span> (opt_markers != <span style=\"color: blue;\">null</span>)\n            {\n                addMarkers(opt_markers);\n            }\n            MainMap.OnMapZoomChanged += <span style=\"color: blue;\">new</span> MapZoomChanged(OnMapZoomChanged);\n        }\n        <span style=\"color: blue;\">void</span> OnMapZoomChanged()\n        {\n            resetViewport();\n        }\n        <span style=\"color: green;\">/**\n        * When we add a marker, the marker may not in the viewport of map, then we don't deal with it, instead\n        * we add the marker into a array called leftMarkers_. When we reset MarkerClusterer we should add the\n        * leftMarkers_ into MarkerClusterer.\n        */</span>\n        <span style=\"color: blue;\">void</span> addLeftMarkers_()\n        {\n            <span style=\"color: blue;\">if</span> (leftMarkers_.Count == 0)\n            {\n                <span style=\"color: blue;\">return</span>;\n            }\n            List&lt;GMapMarker&gt; leftMarkers = <span style=\"color: blue;\">new</span> List&lt;GMapMarker&gt;();\n\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> i = 0; i &lt; leftMarkers_.Count; i++)\n            {\n                <span style=\"color: green;\">//me_.addMarker(leftMarkers_[i], true, null, null, true);</span>\n                addMarker(leftMarkers_[i], <span style=\"color: blue;\">true</span>, <span style=\"color: blue;\">false</span>, <span style=\"color: blue;\">true</span>);<span style=\"color: green;\">//null, null, true);</span>\n            }\n            leftMarkers_ = leftMarkers;\n        }\n\n        <span style=\"color: green;\">/**\n * Remove all markers from MarkerClusterer.\n */</span>\n        <span style=\"color: blue;\">void</span> clearMarkers()\n        {\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> i = 0; i &lt; clusters_.Count; i++)\n            {\n                <span style=\"color: blue;\">if</span> (clusters_[i] != <span style=\"color: blue;\">null</span>)\n                {\n                    clusters_[i].clearMarkers();\n                }\n            }\n            clusters_.Clear();<span style=\"color: green;\">// = null; </span>\n            leftMarkers_.Clear();<span style=\"color: green;\">// = null;</span>\n\n\n            <span style=\"color: green;\">//++ GEvent.removeListener(mcfn_);</span>\n        }\n\n        <span style=\"color: green;\">/**\n          * Check a marker, whether it is in current map viewport.\n          * @private\n          * @return {Boolean} if it is in current map viewport\n          */</span>\n        <span style=\"color: blue;\">bool</span> isMarkerInViewport_(GMapMarker marker)\n        {\n            <span style=\"color: green;\">//return map_.getBounds().containsLatLng(marker.getLatLng());</span>\n            <span style=\"color: blue;\">return</span> map_.CurrentViewArea.Contains(marker.Position);\n        }\n\n        <span style=\"color: green;\">/**\n * When reset MarkerClusterer, there will be some markers get out of its cluster.\n * These markers should be add to new clusters.\n * @param {Array of GMarker} markers Markers to add.\n */</span>\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> reAddMarkers_(List&lt;GMapMarker&gt; markers)\n        {\n            <span style=\"color: blue;\">int</span> len = markers.Count;\n            <span style=\"color: blue;\">var</span> clusters = <span style=\"color: blue;\">new</span> Cluster(<span style=\"color: blue;\">this</span>);<span style=\"color: green;\">// var clusters = [];</span>\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> i = len - 1; i &gt;= 0; i--)\n            {\n                <span style=\"color: green;\">//me_.addMarker(markers[i].marker, true, markers[i].isAdded, clusters, true);</span>\n                addMarker(markers[i], <span style=\"color: blue;\">true</span>, markers[i].isAdded, <span style=\"color: blue;\">false</span>);\n            }\n            addLeftMarkers_();\n        }\n        <span style=\"color: green;\">/**\n  * Add a marker.\n  * @private\n  * @param {GMarker} marker Marker you want to add\n  * @param {Boolean} opt_isNodraw Whether redraw the cluster contained the marker\n  * @param {Boolean} opt_isAdded Whether the marker is added to map. Never use it.\n  * @param {Array of Cluster} opt_clusters Provide a list of clusters, the marker\n  *     cluster will only check these cluster where the marker should join.\n  */</span>\n        <span style=\"color: green;\">//++void addMarker  (marker, opt_isNodraw, opt_isAdded, opt_clusters, opt_isNoCheck)</span>\n\n       public <span style=\"color: blue;\">void</span> addMarker(GMapMarker marker, <span style=\"color: blue;\">bool</span> opt_isNodraw, <span style=\"color: blue;\">bool</span> opt_isAdded, <span style=\"color: blue;\">bool</span> opt_isNoCheck)\n        {\n            <span style=\"color: green;\">// bool opt_isNoCheck = false;</span>\n            <span style=\"color: blue;\">if</span> (opt_isNoCheck != <span style=\"color: blue;\">true</span>)\n            {\n                <span style=\"color: blue;\">if</span> (!isMarkerInViewport_(marker))\n                {\n                    leftMarkers_.Add(marker);\n                    <span style=\"color: blue;\">return</span>;\n                }\n            }\n\n            <span style=\"color: blue;\">bool</span> isAdded = opt_isAdded;<span style=\"color: green;\">//opt_isAdded;</span>\n            List&lt;Cluster&gt; clusters;<span style=\"color: green;\">// = opt_clusters;</span>\n\n            GPoint pos = map_.FromLatLngToLocal(marker.Position);\n\n            <span style=\"color: green;\">//if (typeof isAdded !== \"boolean\") {</span>\n            <span style=\"color: green;\">//isAdded = false;</span>\n            <span style=\"color: green;\">//}</span>\n            <span style=\"color: green;\">//if (typeof clusters !== \"object\" || clusters === null) {</span>\n            clusters = clusters_;\n            <span style=\"color: green;\">// }</span>\n\n            <span style=\"color: blue;\">int</span> length = clusters.Count;\n\n            Cluster cluster = <span style=\"color: blue;\">null</span>;\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">var</span> i = length - 1; i &gt;= 0; i--)\n            {\n                cluster = clusters[i];\n                PointLatLng p = cluster.getCenter();\n                <span style=\"color: blue;\">if</span> (p == PointLatLng.Zero)\n                {\n                    <span style=\"color: blue;\">continue</span>;\n                }\n                GPoint center = map_.FromLatLngToLocal(p);\n\n                <span style=\"color: green;\">// Found a cluster which contains the marker.</span>\n                <span style=\"color: blue;\">if</span> (pos.X &gt;= center.X - gridSize_ &amp;&amp; pos.X &lt;= center.X + gridSize_ &amp;&amp;\n                    pos.Y &gt;= center.Y - gridSize_ &amp;&amp; pos.Y &lt;= center.Y + gridSize_)\n                {\n                    cluster.addMarker(marker);\n                    <span style=\"color: blue;\">if</span> (!opt_isNodraw)\n                    {\n                        cluster.redraw_(<span style=\"color: blue;\">false</span>);\n                    }\n                    <span style=\"color: blue;\">return</span>;\n                }\n            }\n\n            <span style=\"color: green;\">// No cluster contain the marker, create a new cluster.</span>\n            cluster = <span style=\"color: blue;\">new</span> Cluster(<span style=\"color: blue;\">this</span>);\n            cluster.addMarker(marker);\n\n            <span style=\"color: blue;\">if</span> (!opt_isNodraw)\n            {\n                cluster.redraw_(<span style=\"color: blue;\">false</span>);\n            }\n\n            <span style=\"color: green;\">// Add this cluster both in clusters provided and clusters_</span>\n            clusters.Add(cluster);\n            <span style=\"color: blue;\">if</span> (clusters != clusters_)\n            {\n                clusters_.Add(cluster);\n            }\n        }\n        <span style=\"color: green;\">/**\n * Remove a marker.\n *\n * @param {GMarker} marker The marker you want to remove.\n */</span>\n\n        <span style=\"color: blue;\">void</span> removeMarker(GMapMarker marker)\n        {\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> i = 0; i &lt; clusters_.Count; i++)\n            {\n                <span style=\"color: green;\">//if (clusters_[i].remove(marker))</span>\n                <span style=\"color: green;\">//{</span>\n                <span style=\"color: green;\">//    clusters_[i].redraw_(false);</span>\n                <span style=\"color: green;\">//    return;</span>\n                <span style=\"color: green;\">//}</span>\n\n            }\n        }\n\n        <span style=\"color: green;\">/**\n         * Redraw all clusters in viewport.\n         */</span>\n        <span style=\"color: blue;\">void</span> redraw_()\n        {\n            <span style=\"color: blue;\">var</span> clusters = <span style=\"color: blue;\">this</span>.getClustersInViewport();\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">var</span> i = 0; i &lt; clusters.Count; ++i)\n            {\n                clusters[i].redraw_(<span style=\"color: blue;\">true</span>);\n            }\n        }\n\n        <span style=\"color: green;\">/**\n        * Get all clusters in viewport.\n        * @return {Array of Cluster}\n        */</span>\n        List&lt;Cluster&gt; getClustersInViewport()\n        {\n            List&lt;Cluster&gt; clusters = <span style=\"color: blue;\">new</span> List&lt;Cluster&gt;();\n            <span style=\"color: green;\">//  RectLatLng curBounds = map_.CurrentViewArea;</span>\n\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">var</span> i = 0; i &lt; clusters_.Count; i++)\n            {\n\n                <span style=\"color: green;\">//if (clusters_[i].isInBounds(curBounds))</span>\n                <span style=\"color: blue;\">if</span> (clusters_[i].isInBounds())\n                {\n                    clusters.Add(clusters_[i]);\n                }\n            }\n            <span style=\"color: blue;\">return</span> clusters;\n        }\n\n        <span style=\"color: green;\">/**\n    * Collect all markers of clusters in viewport and regroup them.\n    */</span>\n        <span style=\"color: blue;\">void</span> resetViewport()\n        {\n            <span style=\"color: blue;\">var</span> clusters = getClustersInViewport();\n\n            List&lt;GMapMarker&gt; tmpMarkers = <span style=\"color: blue;\">new</span> List&lt;GMapMarker&gt;();\n            <span style=\"color: blue;\">int</span> removed = 0;\n\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">var</span> i = 0; i &lt; clusters.Count; ++i)\n            {\n                Cluster cluster = clusters[i];\n                <span style=\"color: blue;\">double</span> oldZoom = cluster.getCurrentZoom();\n                <span style=\"color: blue;\">if</span> (oldZoom == <span style=\"color: blue;\">null</span>)\n                {\n                    <span style=\"color: blue;\">continue</span>;\n                }\n                <span style=\"color: blue;\">double</span> curZoom = map_.Zoom;\n                <span style=\"color: blue;\">if</span> (curZoom != oldZoom)\n                {\n\n                    <span style=\"color: green;\">// If the cluster zoom level changed then destroy the cluster</span>\n                    <span style=\"color: green;\">// and collect its markers.</span>\n\n                    List&lt;GMapMarker&gt; mks = cluster.getMarkers();\n                    <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> j = 0; j &lt; mks.Count; j++)\n                    {\n                        GMapMarker newMarker = <span style=\"color: blue;\">new</span> GMapMarkerGoogleGreen(mks[j].Position);\n                        newMarker.isAdded = <span style=\"color: blue;\">false</span>;\n\n                        <span style=\"color: green;\">//{</span>\n                        <span style=\"color: green;\">//  'isAdded': false,</span>\n                        <span style=\"color: green;\">//  'marker': mks[j].marker</span>\n                        <span style=\"color: green;\">//};</span>\n                        tmpMarkers.Add(newMarker);\n                    }\n\n                    cluster.clearMarkers();\n\n                    removed++;\n                    <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> j = 0; j &lt; clusters_.Count; j++)\n                    {\n                        <span style=\"color: blue;\">if</span> (cluster == clusters_[j])\n                        {\n                            <span style=\"color: green;\">//clusters_.splice(j, 1);</span>\n                            clusters_.RemoveAt(j);\n                        }\n                    }\n                }\n            }\n            <span style=\"color: green;\">//Add the markers collected into marker cluster to reset</span>\n            reAddMarkers_(tmpMarkers);\n            redraw_();\n        }\n\n\n        <span style=\"color: green;\">/**\n         * Add a set of markers.\n         *\n         * @param {Array of GMarker} markers The markers you want to add.\n         */</span>\n        <span style=\"color: blue;\">void</span> addMarkers(ObservableCollectionThreadSafe&lt;GMapMarker&gt; markers)\n        {\n            <span style=\"color: green;\">//for (var i = 0; i &lt; markers.length; ++i) {</span>\n            <span style=\"color: green;\">//  this.addMarker(markers[i], true);</span>\n            <span style=\"color: green;\">//}</span>\n            <span style=\"color: blue;\">foreach</span> (<span style=\"color: blue;\">var</span> item <span style=\"color: blue;\">in</span> markers)\n            {\n                addMarker(item, <span style=\"color: blue;\">true</span>, <span style=\"color: blue;\">false</span>, <span style=\"color: blue;\">false</span>);\n            }\n            <span style=\"color: blue;\">this</span>.redraw_();\n        }\n\n        <span style=\"color: blue;\">public</span> Map getMap_()\n        {\n            <span style=\"color: blue;\">return</span> map_;\n        }\n\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">int</span> getGridSize_()\n        {\n            <span style=\"color: blue;\">return</span> gridSize_;\n        }\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">int</span> getMaxZoom()\n        {\n            <span style=\"color: blue;\">return</span> maxZoom_;\n        }\n    }\n</pre>\n</div>\n//**********************************************<br /><br />\n<div style=\"color: black; background-color: white;\">\n<pre>    <span style=\"color: blue;\">class</span> Cluster\n    {\n        PointLatLng center_;\n        List&lt;GMapMarker&gt; markers_ = <span style=\"color: blue;\">new</span> List&lt;GMapMarker&gt;();\n\n        MarkerClusterer markerClusterer_;\n        Map map_;\n        GMapMarkerGoogleGreen clusterMarker_ = <span style=\"color: blue;\">null</span>;\n        <span style=\"color: green;\">//var clusterMarker_ = null;</span>\n\n        <span style=\"color: blue;\">double</span> zoom_;\n\n        <span style=\"color: blue;\">public</span> Cluster(MarkerClusterer markerClusterer)\n        {\n            markerClusterer_ = markerClusterer;\n            map_ = markerClusterer.getMap_();\n            zoom_ = map_.Zoom;\n        }\n\n        <span style=\"color: blue;\">public</span> List&lt;GMapMarker&gt; getMarkers()\n        {\n            <span style=\"color: blue;\">return</span> markers_;\n        }\n\n\n        <span style=\"color: green;\">/**\n   * If this cluster intersects certain bounds.\n   *\n   * @param {GLatLngBounds} bounds A bounds to test\n   * @return {Boolean} Is this cluster intersects the bounds\n   */</span>\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">bool</span> isInBounds()\n        {\n\n            <span style=\"color: blue;\">if</span> (center_ == <span style=\"color: blue;\">null</span>)\n            {\n                <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">false</span>;\n            }\n\n            <span style=\"color: green;\">//if (!bounds) </span>\n            <span style=\"color: green;\">//{</span>\n            RectLatLng bounds = map_.CurrentViewArea;\n            <span style=\"color: green;\">//}</span>\n\n            GPoint sw = map_.FromLatLngToLocal(<span style=\"color: blue;\">new</span> PointLatLng(bounds.Bottom, bounds.Left));<span style=\"color: green;\">//= map_.FromLatLngToLocal(bounds.getSouthWest());</span>\n\n            GPoint ne = map_.FromLatLngToLocal(<span style=\"color: blue;\">new</span> PointLatLng(bounds.Top, bounds.Right));<span style=\"color: green;\">//= map_.FromLatLngToLocal(bounds.getNorthEast());</span>\n\n            GPoint centerxy = map_.FromLatLngToLocal(center_);\n\n            <span style=\"color: blue;\">bool</span> inViewport = <span style=\"color: blue;\">true</span>;\n            <span style=\"color: blue;\">double</span> gridSize = markerClusterer_.getGridSize_();\n\n            <span style=\"color: blue;\">if</span> (zoom_ != map_.Zoom)\n            {\n                <span style=\"color: blue;\">double</span> dl = map_.Zoom - zoom_;\n                gridSize = Math.Pow(2, dl) * gridSize;\n            }\n\n            <span style=\"color: blue;\">if</span> (ne.X != sw.X &amp;&amp; (centerxy.X + gridSize &lt; sw.X || centerxy.X - gridSize &gt; ne.X))\n            {\n                inViewport = <span style=\"color: blue;\">false</span>;\n            }\n\n            <span style=\"color: blue;\">if</span> (inViewport &amp;&amp; (centerxy.Y + gridSize &lt; ne.Y || centerxy.Y - gridSize &gt; sw.Y))\n            {\n                inViewport = <span style=\"color: blue;\">false</span>;\n            }\n            <span style=\"color: blue;\">return</span> inViewport;\n        }\n\n\n\n        <span style=\"color: green;\">/**\n * Add a marker.\n *\n * @param {Object} marker An object of marker you want to add:\n *   {Boolean} isAdded If the marker is added on map.\n *   {GMarker} marker The marker you want to add.\n */</span>\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> addMarker(GMapMarker marker)\n        {\n            <span style=\"color: blue;\">if</span> (center_ == PointLatLng.Zero)\n            {\n                <span style=\"color: green;\">/*var pos = marker['marker'].getLatLng();\n                 pos = map.fromLatLngToContainerPixel(pos);\n                 pos.x = parseInt(pos.x - pos.x % (GRIDWIDTH * 2) + GRIDWIDTH);\n                 pos.y = parseInt(pos.y - pos.y % (GRIDWIDTH * 2) + GRIDWIDTH);\n                 center = map.fromContainerPixelToLatLng(pos);*/</span>\n                center_ = marker.Position;\n            }\n            markers_.Add(marker);\n        }\n\n\n        <span style=\"color: green;\">/**\n         * Remove a marker from cluster.\n         *\n         * @param {GMarker} marker The marker you want to remove.\n         * @return {Boolean} Whether find the marker to be removed.\n         */</span>\n        <span style=\"color: blue;\">bool</span> removeMarker(GMapMarker marker)\n        {\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">var</span> i = 0; i &lt; markers_.Count; ++i) \n            {\n              <span style=\"color: blue;\">if</span> (marker == markers_[i]) \n              {\n                <span style=\"color: blue;\">if</span> (markers_[i].isAdded)\n                {\n\n                 <span style=\"color: green;\">// map_.removeOverlay(markers_[i]);</span>\n                  markerClusterer_.Overlay.Markers.Remove(markers_[i]);\n                }\n                markers_.RemoveAt(i);\n                <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">true</span>;\n              }\n            }\n            <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">false</span>;\n        }\n\n        <span style=\"color: green;\">/**\n         * Get current zoom level of this cluster.\n         * Note: the cluster zoom level and map zoom level not always the same.\n         *\n         * @return {Number}\n         */</span>\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">double</span> getCurrentZoom()\n        {\n            <span style=\"color: blue;\">return</span> zoom_;\n        }\n\n\n        <span style=\"color: green;\">/**\n           * Redraw a cluster.\n           * @private\n           * @param {Boolean} isForce If redraw by force, no matter if the cluster is\n           *     in viewport.\n           */</span>\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> redraw_(<span style=\"color: blue;\">bool</span> isForce)\n        {\n            <span style=\"color: blue;\">if</span> (!isForce &amp;&amp; !isInBounds())\n            {\n                <span style=\"color: blue;\">return</span>;\n            }\n\n            <span style=\"color: green;\">// Set cluster zoom level.</span>\n            zoom_ = map_.Zoom;\n            <span style=\"color: blue;\">int</span> i = 0;\n            <span style=\"color: blue;\">int</span> mz = markerClusterer_.getMaxZoom();\n\n            <span style=\"color: blue;\">if</span> (mz == <span style=\"color: blue;\">null</span>) {\n              mz = map_.MaxZoom;<span style=\"color: green;\">//.getCurrentMapType().getMaximumResolution();</span>\n            }\n\n            <span style=\"color: blue;\">if</span> (zoom_ &gt;= mz || getTotalMarkers() == 1) \n            {\n     \n                <span style=\"color: blue;\">for</span> (i = 0; i &lt; markers_.Count; i++)\n                {\n\n                    <span style=\"color: blue;\">if</span> (markers_[i].isAdded)\n                    {\n                        <span style=\"color: blue;\">if</span> (!markers_[i].IsVisible)\n                        {\n                            markers_[i].IsVisible = <span style=\"color: blue;\">true</span>;\n                        }\n                    }\n                    <span style=\"color: blue;\">else</span>\n                    {\n                       <span style=\"color: green;\">// map_.addOverlay(markers_[i].marker);</span>\n                        markers_[i].isAdded = <span style=\"color: blue;\">true</span>;\n                        markerClusterer_.Overlay.Markers.Add(markers_[i]);\n                       \n                    }\n                }\n                <span style=\"color: green;\">//if (clusterMarker_ != null)</span>\n                <span style=\"color: green;\">//{</span>\n                <span style=\"color: green;\">//    clusterMarker_.hide();</span>\n                <span style=\"color: green;\">//}</span>\n            }\n            <span style=\"color: blue;\">else</span>\n            {\n            \n                <span style=\"color: blue;\">for</span> (i = 0; i &lt; markers_.Count; ++i)\n                {\n                    <span style=\"color: green;\">//if (markers_[i].isAdded &amp;&amp; (!markers_[i].marker.isHidden()))</span>\n                    <span style=\"color: blue;\">if</span> (markers_[i].isAdded &amp;&amp; (markers_[i].IsVisible))\n                    {\n                        markers_[i].IsVisible = <span style=\"color: blue;\">false</span>;\n                    }\n                }\n                <span style=\"color: blue;\">if</span> (clusterMarker_ == <span style=\"color: blue;\">null</span>)\n                {\n                    <span style=\"color: green;\">//clusterMarker_ = new ClusterMarker_(center_, getTotalMarkers(), markerClusterer_.getStyles_(), markerClusterer_.getGridSize_());</span>\n                    <span style=\"color: green;\">//map_.addOverlay(clusterMarker_);</span>\n                    clusterMarker_ = <span style=\"color: blue;\">new</span> GMapMarkerGoogleGreen(center_);\n                    clusterMarker_.ToolTipText = markers_.Count.ToString();\n                    clusterMarker_.ToolTipMode = MarkerTooltipMode.Always;\n                    clusterMarker_.isAdded = <span style=\"color: blue;\">true</span>;\n                    markerClusterer_.Overlay.Markers.Add(clusterMarker_);\n\n                }\n                <span style=\"color: blue;\">else</span>\n                {\n                    <span style=\"color: blue;\">if</span> (!clusterMarker_.IsVisible)\n                    {\n                       <span style=\"color: green;\">// clusterMarker_.show();</span>\n                        clusterMarker_.IsVisible = <span style=\"color: blue;\">true</span>;\n                    }\n                    <span style=\"color: green;\">//clusterMarker_.redraw(true);</span>\n                }\n            }\n        }\n\n        <span style=\"color: green;\">/**\n         * Remove all the markers from this cluster.\n         */</span>\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> clearMarkers()\n        {\n            <span style=\"color: blue;\">if</span> (clusterMarker_ != <span style=\"color: blue;\">null</span>)\n            {\n               <span style=\"color: green;\">// map_.removeOverlay(clusterMarker_);</span>\n                markerClusterer_.Overlay.Markers.Remove(clusterMarker_);\n            }\n\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> i = 0; i &lt; markers_.Count; ++i)\n            {\n                <span style=\"color: blue;\">if</span> (markers_[i].isAdded)\n                {\n                   <span style=\"color: green;\">// map_.removeOverlay(markers_[i].marker);</span>\n                    markerClusterer_.Overlay.Markers.Remove(markers_[i]);\n\n                }\n            }\n\n            markers_.Clear();<span style=\"color: green;\">// = [];</span>\n        }\n\n        <span style=\"color: blue;\">public</span> PointLatLng getCenter()\n        {\n            <span style=\"color: blue;\">return</span> center_;\n        }\n\n        <span style=\"color: blue;\">int</span> getTotalMarkers()\n        {\n            <span style=\"color: blue;\">return</span> markers_.Count;\n        }\n\n    }\n//***************************************<br />Using:<br /> public abstract class GMapMarker : ISerializable<br />{<br /> &nbsp;&nbsp; public bool isAdded { get; set; }<br />...}<pre><pre>          ObservableCollectionThreadSafe ClasterMarkers = new ObservableCollectionThreadSafe();\n\n          GMapMarkerGoogleGreen m = new GMapMarkerGoogleGreen(new PointLatLng(54.9268725,23.8724264));\n          GMapMarkerGoogleGreen m1 = new GMapMarkerGoogleGreen(new PointLatLng(54.9068728, 23.9024265));\n          GMapMarkerGoogleGreen m2 = new GMapMarkerGoogleGreen(new PointLatLng(54.9218149707138, 8945770263672));\n          GMapMarkerGoogleGreen m3 = new GMapMarkerGoogleGreen(new PointLatLng(54.9368730, 23.8924267));\n          GMapMarkerGoogleGreen m4 = new GMapMarkerGoogleGreen(new PointLatLng(54.9168727, 23.8924268));\n          GMapMarkerGoogleGreen m5 = new GMapMarkerGoogleGreen(new PointLatLng(54.9068724, 23.8924260));\n\n          ClasterMarkers.Add(m);\n          ClasterMarkers.Add(m1);\n          ClasterMarkers.Add(m2);\n          ClasterMarkers.Add(m3);\n          ClasterMarkers.Add(m4);\n          ClasterMarkers.Add(m5);\n          markerClusterer = new MarkerClusterer(MainMap, ClasterMarkers, objects); </pre>\n</pre>\n<br /></pre>\n</div>\n<br /></pre>\n</div>",
    "PostedDate": "2011-11-03T05:02:25.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]