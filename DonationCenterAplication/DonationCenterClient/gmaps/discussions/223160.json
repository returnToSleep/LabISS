[
  {
    "Id": "478949",
    "ThreadId": "223160",
    "Html": "<p>Hi,</p>\r\n<p>In GMap.NET,WindowsForms file GMapControl.cs function DrawMapGDIplus</p>\r\n<p>after</p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">\r\n<p>if <span style=\"font-size:x-small\">(t != </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">null</span></span><span style=\"font-size:x-small\">)</span></p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\"><span style=\"font-size:x-small\">&nbsp;</span></span></span></span><span style=\"font-size:xx-small\">{</span></p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\"></span></span></span><span style=\"font-size:xx-small\">..</span></p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\"></span></span></span><span style=\"font-size:xx-small\">}</span></p>\r\n<p>add the folowing</p>\r\n<span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">else</span></span></span><span style=\"font-size:x-small\">\r\n<p>{</p>\r\n<span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">int</span></span><span style=\"font-size:x-small\"> ZoomOffset = 0;</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">Tile</span></span><span style=\"font-size:x-small\"> ParentTile = </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">null</span></span><span style=\"font-size:x-small\">;</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">while</span></span><span style=\"font-size:x-small\"> (ParentTile == </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">null</span></span><span style=\"font-size:x-small\"> &amp;&amp; (Core.Zoom - ZoomOffset) &gt;= 1 &amp;&amp; ZoomOffset &lt;= 5)</span></span><span style=\"font-size:x-small\">\r\n<p>{</p>\r\n<p>ZoomOffset += 1;</p>\r\n<span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">int</span></span><span style=\"font-size:x-small\"> IxDev = (</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">int</span></span><span style=\"font-size:x-small\">)</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">Math</span></span><span style=\"font-size:x-small\">.Pow(2, ZoomOffset);</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>ParentTile = Core.Matrix.GetTileWithNoLock(Core.Zoom - ZoomOffset,</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">new</span></span><span style=\"font-size:x-small\"> GMap.NET.</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">Point</span></span><span style=\"font-size:x-small\">((</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">int</span></span><span style=\"font-size:x-small\">)(tilePoint.X / IxDev), (</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">int</span></span><span style=\"font-size:x-small\">)(tilePoint.Y / IxDev)));</span></span><span style=\"font-size:x-small\">\r\n<p>}</p>\r\n<span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">if</span></span><span style=\"font-size:x-small\"> (ParentTile != </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">null</span></span><span style=\"font-size:x-small\">)</span></span><span style=\"font-size:x-small\">\r\n<p>{</p>\r\n<span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">int</span></span><span style=\"font-size:x-small\"> Ix = (</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">int</span></span><span style=\"font-size:x-small\">)</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">Math</span></span><span style=\"font-size:x-small\">.Pow(2, ZoomOffset);</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">int</span></span><span style=\"font-size:x-small\"> Xoff = </span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">Math</span></span><span style=\"font-size:x-small\">.Abs(tilePoint.X - (ParentTile.Pos.X * Ix));</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">int</span></span><span style=\"font-size:x-small\"> Yoff = </span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">Math</span></span><span style=\"font-size:x-small\">.Abs(tilePoint.Y - (ParentTile.Pos.Y * Ix));</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#008000;font-size:x-small\"><span style=\"color:#008000;font-size:x-small\">// render tile</span></span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">lock</span></span><span style=\"font-size:x-small\"> (ParentTile.Overlays)</span></span><span style=\"font-size:x-small\">\r\n<p>{</p>\r\n<span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">foreach</span></span><span style=\"font-size:x-small\"> (</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">WindowsFormsImage</span></span><span style=\"font-size:x-small\"> img </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">in</span></span><span style=\"font-size:x-small\"> ParentTile.Overlays)</span></span><span style=\"font-size:x-small\">\r\n<p>{</p>\r\n<span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">if</span></span><span style=\"font-size:x-small\"> (img != </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">null</span></span><span style=\"font-size:x-small\"> &amp;&amp; img.Img != </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">null</span></span><span style=\"font-size:x-small\">)</span></span><span style=\"font-size:x-small\">\r\n<p>{</p>\r\n<span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">if</span></span><span style=\"font-size:x-small\"> (!found)</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>found =</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">true</span></span><span style=\"font-size:x-small\">;</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>System.Drawing.</p>\r\n</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">RectangleF</span></span><span style=\"font-size:x-small\"> srcRect =</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">new</span></span><span style=\"font-size:x-small\"> System.Drawing.</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">RectangleF</span></span><span style=\"font-size:x-small\">((</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">float</span></span><span style=\"font-size:x-small\">)(Xoff * (img.Img.Width / Ix)),</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>(</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">float</span></span><span style=\"font-size:x-small\">)(Yoff * (img.Img.Height / Ix)),</span></span><span style=\"font-size:x-small\">\r\n<p>(img.Img.Width / Ix),</p>\r\n<p>(img.Img.Height / Ix));</p>\r\n<span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">ImageAttributes</span></span><span style=\"font-size:x-small\"> attributes = </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">new</span></span><span style=\"font-size:x-small\"> </span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">ImageAttributes</span></span><span style=\"font-size:x-small\">();</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>attributes.SetWrapMode(</p>\r\n</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">WrapMode</span></span><span style=\"font-size:x-small\">.TileFlipXY);</span></span><span style=\"font-size:x-small\">\r\n<p>g.DrawImage(img.Img,</p>\r\n<span style=\"font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">new</span></span><span style=\"font-size:x-small\"> System.Drawing.</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">Rectangle</span></span><span style=\"font-size:x-small\">(Core.tileRect.X, Core.tileRect.Y, Core.tileRect.Width, Core.tileRect.Height),</span></span><span style=\"font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>srcRect.X, srcRect.Y, srcRect.Width, srcRect.Height,</p>\r\n</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">GraphicsUnit</span></span><span style=\"font-size:x-small\">.Pixel, attributes);</span></span><span style=\"font-size:x-small\">\r\n<p>}</p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n</span></span></span></span></p>\r\n<p><span style=\"color:#000000\">Working only if </span><span style=\"font-size:x-small\">!ContinuesMap and !PocketPC</span>\r\n<p>\r\n<p><span style=\"color:#000000\">Best regards,</span></p>\r\n</p>\r\n<p>\r\n<p><span style=\"color:#000000\">Blaz</span></p>\r\n</p>\r\n</p>",
    "PostedDate": "2010-08-10T23:25:19.54-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479015",
    "ThreadId": "223160",
    "Html": "<p>thats really something! Thanks ;}</p>",
    "PostedDate": "2010-08-11T03:02:46.103-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479040",
    "ThreadId": "223160",
    "Html": "<p>It's quite good, but&nbsp;if in CacheOnly mode, tile loading should be implemented, if the tile is not in memory. Because now it only takes the tiles that are memcached.</p>\r\n<p>Best regards,</p>\r\n<p>Blaz</p>",
    "PostedDate": "2010-08-11T04:47:52.547-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479360",
    "ThreadId": "223160",
    "Html": "<p>yes, theres is a lot of space for improvements as always, a never ending saga of great maps ;}</p>",
    "PostedDate": "2010-08-11T12:55:09.363-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "480117",
    "ThreadId": "223160",
    "Html": "<p>Hi,</p>\r\n<p>I've seen the code inside the hotbuild.</p>\r\n<p>You should insert the !ContinuesMap check also</p>\r\n<p>because&nbsp;of tilePoint and tileToDraw difference</p>\r\n<p><span style=\"font-size:x-small\">&nbsp;</span></p>",
    "PostedDate": "2010-08-13T03:32:48.213-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "480121",
    "ThreadId": "223160",
    "Html": "<p>yeah, but ContinuesMap does not work correctly and i left it for later testing</p>",
    "PostedDate": "2010-08-13T03:44:32.777-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]