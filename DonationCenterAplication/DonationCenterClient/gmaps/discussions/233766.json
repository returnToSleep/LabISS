[
  {
    "Id": "518284",
    "ThreadId": "233766",
    "Html": "\r\n<p>I have been playing with Gmap.Net for a few days and quite easily embedded map searching functionality into my desktop WInForm app. Great work, radioman. When I have time I am considering to put an obelisk in my backyard with your name on it ;-)<br>\r\nI can easily map a contact provided he has address or even part of it. The problem I sumbled on was in a simple request of my daughter to make it find all adacent starbucks, something that current API do not provide (or at least I did not find how). So I read\r\n about 20 discussions here and adopted piece of code of somebody (hopefully the latter will forgive me for not remembering his name). Basically, my keywords to search are &quot;Starbucks, Seattle&quot; which produces URL:\r\n<a href=\"http://maps.google.com/maps?q=Starbucks,&#43;Seattle,&#43;WA&hl=en\">http://maps.google.com/maps?q=Starbucks,&#43;Seattle,&#43;WA&amp;hl=en</a>&nbsp;This produces response and when I parse it by searching &quot;latlng:{&quot; in a loop and able to discover the lat/lng, address,\r\n and even the phone number of the location. So far so good. I am getting 10 locations. So since I wondered why there are so few Starbucks in Seattle I entered the same URL on the address line in the Google Map in IE. Therem I got way more locations displayed\r\n (by order of magnitude). I save the response that I get in GMap.NET and researched it again thoroughly but could not discover there where all those locations/coordinates that I am missing... (I which I could attached two map here for comparison). At any rate\r\n my question is how do I find the rest of the locations? I guess the browser is doing some addition prosessing, that is sending additional requests for more info?</p>\r\n<p>Here the code I added to Gmaps.cs:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> GeoCoderStatusCode GetLatLngFromAddress(<span style=\"color:blue\">string</span> keywords, Hashtable posCollection)\r\n      {\r\n          <span style=\"color:blue\">return</span> GetLatLngFromAddressUrl(MakeAddressUrl(keywords), UseGeocoderCache, posCollection);\r\n      }\r\n\r\n      <span style=\"color:blue\">internal</span> <span style=\"color:blue\">string</span> MakeAddressUrl(<span style=\"color:blue\">string</span> keywords)\r\n      {\r\n          <span style=\"color:blue\">string</span> key = keywords.Replace(<span style=\"color:#a31515\">' '</span>, <span style=\"color:#a31515\">'&#43;'</span>);\r\n          <span style=\"color:blue\">return</span> <span style=\"color:blue\">string</span>.Format(<span style=\"color:#a31515\">&quot;http://maps.google.com/maps?q={0}&amp;hl={1}&quot;</span>, key, LanguageStr);\r\n      }\r\n\r\n      <span style=\"color:blue\">internal</span> GeoCoderStatusCode GetLatLngFromAddressUrl(<span style=\"color:blue\">string</span> url, <span style=\"color:blue\">bool</span> useCache, Hashtable posCollection)\r\n      {\r\n          GeoCoderStatusCode status = GeoCoderStatusCode.Unknow;\r\n          <span style=\"color:green\">//PointLatLng? ret = null;</span>\r\n          <span style=\"color:blue\">try</span>\r\n          {\r\n              <span style=\"color:blue\">string</span> urlEnd = url.Substring(url.IndexOf(<span style=\"color:#a31515\">&quot;maps?q=&quot;</span>));\r\n\r\n<span style=\"color:blue\">#if</span> !PocketPC\r\n              <span style=\"color:blue\">char</span>[] ilg = Path.GetInvalidFileNameChars();\r\n<span style=\"color:blue\">#else</span>\r\n            <span style=\"color:blue\">char</span>[] ilg = <span style=\"color:blue\">new</span> <span style=\"color:blue\">char</span>[41];\r\n            <span style=\"color:blue\">for</span>(<span style=\"color:blue\">int</span> i = 0; i &amp;lt; 32; i&#43;&#43;)\r\n               ilg[i] = (<span style=\"color:blue\">char</span>) i;\r\n\r\n            ilg[32] = <span style=\"color:#a31515\">'&amp;quot;'</span>;\r\n            ilg[33] = <span style=\"color:#a31515\">'&amp;lt;'</span>;\r\n            ilg[34] = <span style=\"color:#a31515\">'&amp;gt;'</span>;\r\n            ilg[35] = <span style=\"color:#a31515\">'|'</span>;\r\n            ilg[36] = <span style=\"color:#a31515\">'?'</span>;\r\n            ilg[37] = <span style=\"color:#a31515\">':'</span>;\r\n            ilg[38] = <span style=\"color:#a31515\">'/'</span>;\r\n            ilg[39] = '\\\\';\r\n            ilg[39] = <span style=\"color:#a31515\">'*'</span>;\r\n<span style=\"color:blue\">#endif</span>\r\n\r\n              <span style=\"color:blue\">foreach</span> (<span style=\"color:blue\">char</span> c <span style=\"color:blue\">in</span> ilg)\r\n              {\r\n                  urlEnd = urlEnd.Replace(c, <span style=\"color:#a31515\">'_'</span>);\r\n              }\r\n\r\n              <span style=\"color:blue\">string</span> addr = useCache ? Cache.Instance.GetGeocoderFromCache(urlEnd) : <span style=\"color:blue\">string</span>.Empty;\r\n\r\n              <span style=\"color:blue\">if</span> (<span style=\"color:blue\">string</span>.IsNullOrEmpty(addr))\r\n              {\r\n                  HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\r\n                  <span style=\"color:blue\">if</span> (Proxy != <span style=\"color:blue\">null</span>)\r\n                  {\r\n                      request.Proxy = Proxy;\r\n<span style=\"color:blue\">#if</span> !PocketPC\r\n                      request.PreAuthenticate = <span style=\"color:blue\">true</span>;\r\n<span style=\"color:blue\">#endif</span>\r\n                  }\r\n                  <span style=\"color:blue\">else</span>\r\n                  {\r\n<span style=\"color:blue\">#if</span> !PocketPC\r\n                      request.Proxy = WebRequest.DefaultWebProxy;\r\n<span style=\"color:blue\">#else</span>\r\n                  request.Proxy = GlobalProxySelection.GetEmptyWebProxy();\r\n<span style=\"color:blue\">#endif</span>\r\n                  }\r\n\r\n                  request.UserAgent = UserAgent;\r\n                  request.Timeout = Timeout;\r\n                  request.ReadWriteTimeout = Timeout * 6;\r\n                  request.KeepAlive = <span style=\"color:blue\">false</span>;\r\n\r\n                  <span style=\"color:blue\">using</span> (HttpWebResponse response = request.GetResponse() <span style=\"color:blue\">as</span> HttpWebResponse)\r\n                  {\r\n                      <span style=\"color:blue\">using</span> (Stream responseStream = response.GetResponseStream())\r\n                      {\r\n                          <span style=\"color:blue\">using</span> (StreamReader read = <span style=\"color:blue\">new</span> StreamReader(responseStream))\r\n                          {\r\n                              addr = read.ReadToEnd();\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n\r\n              <span style=\"color:blue\">if</span> (addr.Length != 0)\r\n              {\r\n                  <span style=\"color:blue\">string</span>[] chunks;\r\n                  <span style=\"color:blue\">string</span>[] ltln_separators = <span style=\"color:blue\">new</span> <span style=\"color:blue\">string</span>[] { <span style=\"color:#a31515\">&quot;latlng:{&quot;</span>, <span style=\"color:#a31515\">&quot;lat:&quot;</span>, <span style=\"color:#a31515\">&quot;lng:&quot;</span>, <span style=\"color:#a31515\">&quot;}&quot;</span>, <span style=\"color:#a31515\">&quot;,&quot;</span> };\r\n\r\n                  <span style=\"color:blue\">do</span>\r\n                  {\r\n                      <span style=\"color:blue\">var</span> lt_ln_s = addr.IndexOf(<span style=\"color:#a31515\">&quot;latlng:{&quot;</span>);\r\n                      <span style=\"color:blue\">if</span> (lt_ln_s == -1)\r\n                      {\r\n                          status = GeoCoderStatusCode.G_GEO_UNKNOWN_ADDRESS;\r\n                          <span style=\"color:blue\">break</span>;\r\n                      }\r\n\r\n                      <span style=\"color:blue\">var</span> lt_ln_e = addr.IndexOf(<span style=\"color:#a31515\">&quot;}&quot;</span>, lt_ln_s);\r\n                      <span style=\"color:blue\">if</span> (lt_ln_e == -1)\r\n                      {\r\n                          status = GeoCoderStatusCode.G_GEO_UNKNOWN_ADDRESS;\r\n                          <span style=\"color:blue\">break</span>;\r\n                      }\r\n\r\n                      <span style=\"color:blue\">try</span>\r\n                      {\r\n                          <span style=\"color:blue\">var</span> ltlns = addr.Substring(lt_ln_s, lt_ln_e - lt_ln_s);\r\n                          addr = addr.Remove(0, lt_ln_e);\r\n                          chunks = ltlns.Split(ltln_separators, StringSplitOptions.None);\r\n                          <span style=\"color:blue\">double</span> lat = <span style=\"color:blue\">double</span>.Parse(chunks[2], CultureInfo.InvariantCulture);\r\n                          <span style=\"color:blue\">double</span> lng = <span style=\"color:blue\">double</span>.Parse(chunks[4], CultureInfo.InvariantCulture);\r\n\r\n                          <span style=\"color:blue\">var</span> poi_address = <span style=\"color:#a31515\">&quot;&quot;</span>;\r\n                          <span style=\"color:blue\">var</span> phone = <span style=\"color:#a31515\">&quot;&quot;</span>;\r\n                          <span style=\"color:blue\">var</span> geocode = <span style=\"color:#a31515\">&quot;&quot;</span>;\r\n                          <span style=\"color:blue\">var</span> idx2 = 0;\r\n\r\n                          <span style=\"color:blue\">var</span> idx1 = addr.IndexOf(<span style=\"color:#a31515\">&quot;laddr:\\&quot;&quot;</span>);\r\n                          <span style=\"color:blue\">if</span> (idx1 != -1)\r\n                          {\r\n                              addr = addr.Remove(0,idx1&#43;7);\r\n                              idx2 = addr.IndexOf(<span style=\"color:#a31515\">&quot;\\&quot;&quot;</span>);\r\n                              <span style=\"color:blue\">if</span> (idx2 != -1)\r\n                                  poi_address = addr.Substring(0, idx2);\r\n                          }\r\n\r\n                          idx1 = addr.IndexOf(<span style=\"color:#a31515\">&quot;geocode:\\&quot;&quot;</span>);\r\n                          <span style=\"color:blue\">if</span> (idx1 != -1)\r\n                          {\r\n                              addr = addr.Remove(0,idx1&#43;9);\r\n                              idx2 = addr.IndexOf(<span style=\"color:#a31515\">&quot;\\&quot;&quot;</span>);\r\n                              <span style=\"color:blue\">if</span> (idx2 != -1)\r\n                                  geocode = addr.Substring(0, idx2);\r\n                              <span style=\"color:blue\">else</span>\r\n                                  <span style=\"color:blue\">continue</span>;\r\n                          }\r\n\r\n                          idx1 = addr.IndexOf(<span style=\"color:#a31515\">&quot;sxph:\\&quot;&quot;</span>);\r\n                          <span style=\"color:blue\">if</span> (idx1 != -1)\r\n                          {\r\n                              addr = addr.Remove(0,idx1&#43;6);\r\n                              idx2 = addr.IndexOf(<span style=\"color:#a31515\">&quot;\\&quot;&quot;</span>);\r\n                              <span style=\"color:blue\">if</span> (idx2 != -1)\r\n                                  phone = addr.Substring(0, idx2);\r\n                          }\r\n                          \r\n                          Placemark geoPos = <span style=\"color:blue\">new</span> Placemark(lat, lng, poi_address, phone);\r\n                          posCollection.Add(geocode, geoPos);\r\n\r\n                      }\r\n                      <span style=\"color:blue\">catch</span> (Exception ex)\r\n                      {\r\n                          status = GeoCoderStatusCode.G_GEO_BAD_REQUEST;\r\n                          Debug.WriteLine(<span style=\"color:#a31515\">&quot;GetLatLngFromGeocoderUrl: &quot;</span> &#43; ex.ToString());\r\n                          <span style=\"color:blue\">throw</span>;\r\n                      }\r\n\r\n\r\n                  } <span style=\"color:blue\">while</span> (<span style=\"color:blue\">true</span>);\r\n              }\r\n\r\n          }\r\n          <span style=\"color:blue\">catch</span> (Exception ex)\r\n          {\r\n              Debug.WriteLine(<span style=\"color:#a31515\">&quot;GetLatLngFromGeocoderUrl: &quot;</span> &#43; ex.ToString());\r\n          }\r\n\r\n          <span style=\"color:blue\">if</span> (posCollection.Count != 0)\r\n              status = GeoCoderStatusCode.G_GEO_SUCCESS;\r\n\r\n          <span style=\"color:blue\">return</span> status;\r\n      }\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>and here is the code I added to GMapControl:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>      <span style=\"color:blue\">public</span> GeoCoderStatusCode GetPositionsByKeywords(<span style=\"color:blue\">string</span> keys, Hashtable posCollection)\r\n      {\r\n          GeoCoderStatusCode status = GeoCoderStatusCode.Unknow;\r\n          status = Manager.GetLatLngFromAddress(keys, posCollection);\r\n          <span style=\"color:blue\">return</span> status;\r\n      }\r\n\r\n</pre>\r\n</div>\r\n<p>On return I have hashtable that is filled with Placemarker objects while the keys&nbsp;are the corresponding IDs that I retrieve from &nbsp;&quot;geocode:&quot; part of the response (sort of combo of small and capital letters - looks unique, I hope)<br>\r\nI also changed Placemark class and simily added there PointLatLng in order to have lat/lng be associated with the address, phone, etc...</p>\r\n<p>I'd really would appreciate if anybody can shed some light on how to get ALL of the locations the same way that you can see in IE.</p>\r\n",
    "PostedDate": "2010-11-06T19:37:16.713-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "518413",
    "ThreadId": "233766",
    "Html": "\r\n<p>;} hm..</p>\r\n",
    "PostedDate": "2010-11-07T09:48:33.037-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "518488",
    "ThreadId": "233766",
    "Html": "\r\n<p>I did some additional research and came to conclusion that the url that is being submitted to google (for now I am into google only) can be improved by providing additional parapeters. My goal is to find&nbsp;all establishment (like Starbucks) around me,\r\n in a distance of&nbsp;X miles/km. <br>\r\nHere is the list of parameters that can be used for the url:</p>\r\n<p>&amp;sll=lat,lng - the lat/lng of the center point of the local search<br>\r\n&amp;spn=lats,lngs - the span of the entire map (lat and lng)<br>\r\n&amp;sspn=lats,lngs - search span for the local search<br>\r\n<br>\r\nthese are not all by all means, but mostly relevant. <br>\r\nthere is also $radius=value but this one does not seem to work consistently - I am still playing with it from IE address box...<br>\r\nalso there is &amp;num=X where X by default is 10 and has range of 0-20.<br>\r\n<br>\r\nSo I started creating API like that GMAP and will be done in couple of hours and let you know what I discovered.<br>\r\nIn fact Google has Place API which are here: &#65279;&#65279;&#65279;&#65279;&#65279;<a href=\"http://code.google.com//apis/maps/documentation/places\">http://code.google.com//apis/maps/documentation/places</a>&nbsp;but it seems they have more sever restrictions and requirements... another topic\r\n for research. Google recommends to use them when the keywords contain non-address components (like Starbucks).</p>\r\n<p>I'll get back to you on this when I see the results that I get from within GMAP</p>\r\n<p><strong>A quick question: can you point me how to conver this span (which is I&nbsp;think in degrees) to miles/km?</strong></p>\r\n<p>=== tested it from within the GMAP - the results are different than on IE address line while inputing the same URL. I used &amp;sll= in the user and also &amp;num=20 -&nbsp;those really work, however I dont get all those secondary points of starbucks that\r\n you can see on the map when inputing the same url on IE address line. It is more annoying than critical - something that Google does not tell us?</p>\r\n",
    "PostedDate": "2010-11-07T14:46:53.643-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]