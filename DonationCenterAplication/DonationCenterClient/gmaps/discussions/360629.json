[
  {
    "Id": "852707",
    "ThreadId": "360629",
    "Html": "\r\n<p>Has anyone seen and example of how to draw a map reference scale using GMap.net control? It would not move with the map but sit in the lower left corner and update on each zoom event.</p>\r\n",
    "PostedDate": "2012-06-22T11:21:09.993-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "852997",
    "ThreadId": "360629",
    "Html": "<p>Here are a few code snippets for a custom scale I created:</p>\r\n<p>1) Override the OnPaintOverlays(System.Drawing.Graphics g) method of GMapControl</p>\r\n<p>2) Put this code in the method:<br /><br />\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">if</span> (ShowCustomScale)\r\n{\r\n     DrawScale(g, (<span style=\"color: blue;\">int</span>)<span style=\"color: blue;\">this</span>.Zoom, Position.Lat, intScaleBarHeight, intScaleRectWidth, intScaleRectHeight, intScaleLeftPadding, <span style=\"color: blue;\">this</span>.Width, <span style=\"color: blue;\">this</span>.Height, 10,\r\n                    fontCustomScaleBold, fontCustomScale, 5, <span style=\"color: blue;\">this</span>.CustomScalePosition, <span style=\"color: blue;\">false</span>);<br />}\r\n</pre>\r\n</div>\r\n</p>\r\n<p>3) Here's the DrawScale method:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: gray;\">        ///</span> <span style=\"color: gray;\">&lt;summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span><span style=\"color: green;\"> Draw the scale at the specified location</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;/summary&gt;</span>\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> DrawScale(System.Drawing.Graphics g, <span style=\"color: blue;\">int</span> zoom, <span style=\"color: blue;\">double</span> lat, <span style=\"color: blue;\">int</span> scaleBarHeight, <span style=\"color: blue;\">int</span> scaleWidth, <span style=\"color: blue;\">int</span> scaleHeight, <span style=\"color: blue;\">int</span> scaleLeftPadding, <span style=\"color: blue;\">int</span> canvasWidth, <span style=\"color: blue;\">int</span> canvasHeight, \r\n            <span style=\"color: blue;\">int</span> padding, Font fontBold, Font fontStandard, <span style=\"color: blue;\">int</span> tickLineLength, MapScalePosition position, <span style=\"color: blue;\">bool</span> showScaleFactor)\r\n        {\r\n            <span style=\"color: blue;\">double</span> resolution = <span style=\"color: blue;\">this</span>.MapProvider.Projection.GetGroundResolution(zoom, lat);\r\n\r\n            <span style=\"color: blue;\">int</span> px10 = (<span style=\"color: blue;\">int</span>)(10.0 / resolution);            <span style=\"color: green;\">// 10 meters</span>\r\n            <span style=\"color: blue;\">int</span> px100 = (<span style=\"color: blue;\">int</span>)(100.0 / resolution);          <span style=\"color: green;\">// 100 meters</span>\r\n            <span style=\"color: blue;\">int</span> px1000 = (<span style=\"color: blue;\">int</span>)(1000.0 / resolution);        <span style=\"color: green;\">// 1km   </span>\r\n            <span style=\"color: blue;\">int</span> px10000 = (<span style=\"color: blue;\">int</span>)(10000.0 / resolution);      <span style=\"color: green;\">// 10km  </span>\r\n            <span style=\"color: blue;\">int</span> px100000 = (<span style=\"color: blue;\">int</span>)(100000.0 / resolution);    <span style=\"color: green;\">// 100km  </span>\r\n            <span style=\"color: blue;\">int</span> px1000000 = (<span style=\"color: blue;\">int</span>)(1000000.0 / resolution);  <span style=\"color: green;\">// 1000km</span>\r\n            <span style=\"color: blue;\">int</span> px5000000 = (<span style=\"color: blue;\">int</span>)(5000000.0 / resolution);  <span style=\"color: green;\">// 5000km</span>\r\n\r\n            <span style=\"color: green;\">//Check how much width we have and set the scale accordingly</span>\r\n            <span style=\"color: blue;\">int</span> availableWidth = (scaleWidth - 2 * scaleLeftPadding);\r\n\r\n            <span style=\"color: green;\">//5000 kilometers:</span>\r\n            <span style=\"color: blue;\">if</span> (availableWidth &gt;= px5000000)\r\n                DrawSpecificScale(g, px5000000, availableWidth, 5000, <span style=\"color: #a31515;\">\"km\"</span>, scaleBarHeight, scaleWidth, scaleHeight, canvasWidth, canvasHeight, padding, fontBold, fontStandard, tickLineLength, position, showScaleFactor);\r\n            <span style=\"color: green;\">//1000 kilometers:</span>\r\n            <span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span> (availableWidth &gt;= px1000000)\r\n                DrawSpecificScale(g, px1000000, availableWidth, 1000, <span style=\"color: #a31515;\">\"km\"</span>, scaleBarHeight, scaleWidth, scaleHeight, canvasWidth, canvasHeight, padding, fontBold, fontStandard, tickLineLength, position, showScaleFactor);\r\n            <span style=\"color: green;\">//100 kilometers:</span>\r\n            <span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span> (availableWidth &gt;= px100000)\r\n                DrawSpecificScale(g, px100000, availableWidth, 100, <span style=\"color: #a31515;\">\"km\"</span>, scaleBarHeight, scaleWidth, scaleHeight, canvasWidth, canvasHeight, padding, fontBold, fontStandard, tickLineLength, position, showScaleFactor);\r\n            <span style=\"color: green;\">//10 kilometers:</span>\r\n            <span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span> (availableWidth &gt;= px10000)\r\n                DrawSpecificScale(g, px10000, availableWidth, 10, <span style=\"color: #a31515;\">\"km\"</span>, scaleBarHeight, scaleWidth, scaleHeight, canvasWidth, canvasHeight, padding, fontBold, fontStandard, tickLineLength, position, showScaleFactor);\r\n            <span style=\"color: green;\">//1 kilometers:</span>\r\n            <span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span> (availableWidth &gt;= px1000)\r\n                DrawSpecificScale(g, px1000, availableWidth, 1, <span style=\"color: #a31515;\">\"km\"</span>, scaleBarHeight, scaleWidth, scaleHeight, canvasWidth, canvasHeight, padding, fontBold, fontStandard, tickLineLength, position, showScaleFactor);\r\n            <span style=\"color: green;\">//100 meters:</span>\r\n            <span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span> (availableWidth &gt;= px100)\r\n                DrawSpecificScale(g, px100, availableWidth, 100, <span style=\"color: #a31515;\">\"m\"</span>, scaleBarHeight, scaleWidth, scaleHeight, canvasWidth, canvasHeight, padding, fontBold, fontStandard, tickLineLength, position, showScaleFactor);\r\n            <span style=\"color: green;\">//10 meters:</span>\r\n            <span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span> (availableWidth &gt;= px10)\r\n                DrawSpecificScale(g, px10, availableWidth, 10, <span style=\"color: #a31515;\">\"m\"</span>, scaleBarHeight, scaleWidth, scaleHeight, canvasWidth, canvasHeight, padding, fontBold, fontStandard, tickLineLength, position, showScaleFactor);\r\n        }<br /><br />4) And finally the DrawSpecificScale() method:<br /><div style=\"color: black; background-color: white;\"><pre><span style=\"color: gray;\">        ///</span> <span style=\"color: gray;\">&lt;summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span><span style=\"color: green;\"> Draw the scale</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;/summary&gt;</span>\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> DrawSpecificScale(System.Drawing.Graphics g, <span style=\"color: blue;\">int</span> resLength, <span style=\"color: blue;\">int</span> availableWidth, <span style=\"color: blue;\">int</span> totalDimenson, String unit, <span style=\"color: blue;\">int</span> scaleBarHeight, <span style=\"color: blue;\">int</span> scaleWidth, <span style=\"color: blue;\">int</span> scaleHeight, <span style=\"color: blue;\">int</span> canvasWidth,\r\n            <span style=\"color: blue;\">int</span> canvasHeight, <span style=\"color: blue;\">int</span> padding, Font fontBold, Font fontStandard, <span style=\"color: blue;\">int</span> tickLineLength, MapScalePosition scalePos, <span style=\"color: blue;\">bool</span> showScaleFactor)\r\n        {\r\n            Point p = <span style=\"color: blue;\">new</span> Point();\r\n            <span style=\"color: blue;\">if</span>(scalePos == MapScalePosition.BottomRight)\r\n                p = <span style=\"color: blue;\">new</span> System.Drawing.Point(canvasWidth - (scaleWidth + padding), canvasHeight - (scaleHeight + padding));\r\n            <span style=\"color: blue;\">else</span>\r\n                p = <span style=\"color: blue;\">new</span> System.Drawing.Point(padding, canvasHeight - (scaleHeight + padding));\r\n            Rectangle rect = <span style=\"color: blue;\">new</span> Rectangle(p, <span style=\"color: blue;\">new</span> Size(scaleWidth, scaleHeight));\r\n            g.FillRectangle(brushCustomScaleBackColor, rect);\r\n            g.DrawRectangle(penScaleOuterRect, rect);\r\n            SizeF stringSize = <span style=\"color: blue;\">new</span> SizeF();\r\n            Point pos = <span style=\"color: blue;\">new</span> Point();\r\n\r\n            <span style=\"color: green;\">//Header:</span>\r\n            String scaleString = <span style=\"color: #a31515;\">\"Maï¿½stab\"</span>;\r\n            <span style=\"color: blue;\">if</span> (showScaleFactor)\r\n                scaleString += String.Format(<span style=\"color: #a31515;\">\" 1 : {0}\"</span>, <span style=\"color: blue;\">this</span>.ScaleFactor);\r\n            stringSize = g.MeasureString(scaleString, fontBold);\r\n            pos = <span style=\"color: blue;\">new</span> Point(p.X + (rect.Width - (<span style=\"color: blue;\">int</span>)stringSize.Width) / 2, p.Y + 3);\r\n            g.DrawString(scaleString, fontBold, penScaleOuterRect.Brush, pos);\r\n\r\n            pos = <span style=\"color: blue;\">new</span> Point(p.X + padding, pos.Y + 3 *scaleBarHeight);\r\n\r\n            <span style=\"color: green;\">//How many rectangles fit?</span>\r\n            <span style=\"color: blue;\">int</span> numRects = availableWidth / resLength;\r\n            Size rectSize = <span style=\"color: blue;\">new</span> Size(resLength, scaleBarHeight);\r\n            <span style=\"color: green;\">//Center rectangle</span>\r\n            pos.X += (availableWidth - resLength * numRects) / 2;\r\n            <span style=\"color: green;\">//Draw rectangles:</span>\r\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> i = 0; i &lt; numRects; i++)\r\n            {\r\n                Rectangle r = <span style=\"color: blue;\">new</span> Rectangle(pos, rectSize);\r\n                <span style=\"color: blue;\">if</span> (i % 2 == 0)\r\n                    g.FillRectangle(penScaleOuterRect.Brush, r);\r\n                <span style=\"color: blue;\">else</span>\r\n                    g.DrawRectangle(penScaleOuterRect, r);\r\n                <span style=\"color: green;\">//Draw little vertical lines</span>\r\n                g.DrawLine(penScaleOuterRect, pos, <span style=\"color: blue;\">new</span> Point(pos.X, pos.Y - tickLineLength));\r\n                <span style=\"color: green;\">//Draw labels:</span>\r\n                <span style=\"color: blue;\">int</span> dist = i * totalDimenson;\r\n                stringSize = g.MeasureString(dist + <span style=\"color: #a31515;\">\" \"</span> + unit, fontStandard);\r\n                g.DrawString(dist + <span style=\"color: #a31515;\">\" \"</span> + unit, fontStandard, penScaleOuterRect.Brush, <span style=\"color: blue;\">new</span> Point(pos.X - (<span style=\"color: blue;\">int</span>)stringSize.Width / 2, pos.Y - (tickLineLength + (<span style=\"color: blue;\">int</span>)stringSize.Height)));\r\n                <span style=\"color: green;\">//Finally set new point</span>\r\n                pos = <span style=\"color: blue;\">new</span> Point(pos.X + resLength, pos.Y);\r\n            }\r\n            <span style=\"color: green;\">//Draw last line:</span>\r\n            g.DrawLine(penScaleOuterRect, pos, <span style=\"color: blue;\">new</span> Point(pos.X, pos.Y - tickLineLength));\r\n            <span style=\"color: green;\">//Draw last label</span>\r\n            <span style=\"color: blue;\">int</span> m = numRects * totalDimenson;\r\n            stringSize = g.MeasureString(m + <span style=\"color: #a31515;\">\" \"</span> + unit, fontStandard);\r\n            g.DrawString(m + <span style=\"color: #a31515;\">\" \"</span> + unit, fontStandard, penScaleOuterRect.Brush, <span style=\"color: blue;\">new</span> Point(pos.X - (<span style=\"color: blue;\">int</span>)stringSize.Width / 2, pos.Y - (tickLineLength + (<span style=\"color: blue;\">int</span>)stringSize.Height)));\r\n        }\r\n</pre>\r\n</div>\r\n<br /></pre>\r\n</div>\r\n</p>",
    "PostedDate": "2012-06-24T06:05:11.607-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "853918",
    "ThreadId": "360629",
    "Html": "<p>Awesome xandolph, Many thanks. I'll give it a try.&nbsp;</p>",
    "PostedDate": "2012-06-26T09:46:03.797-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "853948",
    "ThreadId": "360629",
    "Html": "<p>Actually, while I was incorporating you code, I found this:</p>\r\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">\r\n<p>gMapControl1.MapScaleInfoEnabled = true;</p>\r\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"></span></span>It seems to work fine. Have you tried it?</p>\r\n</span></span></span></p>",
    "PostedDate": "2012-06-26T10:43:24.513-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "853982",
    "ThreadId": "360629",
    "Html": "<p>Hi!</p>\r\n<p>Yes of course :-)</p>\r\n<p>I just wanted to have a better looking scale that is also easily adaptable, mine looks like this:</p>\r\n<p><img src=\"https://dl.dropbox.com/u/7026787/scale.jpg\" alt=\"\" /></p>",
    "PostedDate": "2012-06-26T11:37:23.107-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "853984",
    "ThreadId": "360629",
    "Html": "\r\n<div>\r\n<p><span style=\"font-size:11.0pt; font-family:\">Oh, yes. Is much nicer looking.</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<div>\r\n<p><b><span style=\"font-family:\">Rick Goulian</span></b><b><span style=\"font-family:\"><br>\r\n</span></b><span style=\"font-size:10.0pt; font-family:\">Software Engineer<br>\r\n<br>\r\n<b>STARA Technologies, Inc.</b></span></p>\r\n<p><b><span style=\"font-size:10.0pt; font-family:\">www.staratechnologies.com<br>\r\n<br>\r\n</span></b><span style=\"font-size:10.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:10.0pt; font-family:\">Cell:480-225-1146</span></p>\r\n<p><span style=\"font-size:10.0pt; font-family:\">Office: 480-307-6732 x405<br>\r\nemail: </span><span style=\"font-size:11.0pt; font-family:\"><a href=\"mailto:Rick.goulian@staratechnologies.com\"><span style=\"font-size:10.0pt; font-family:\">Rick.goulian@staratechnologies.com</span></a></span><span style=\"font-size:10.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:10.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:10.0pt; font-family:\"><img border=\"0\" width=\"161\" height=\"67\" id=\"Picture_x0020_1\" src=\"cid:image001.jpg@01CD5390.180095E0\" alt=\"Description: Description: Description: Description: STARAConnect_small\"></span><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p style=\"\"><span style=\"color:#1F497D\"></span></p>\r\n<p style=\"\"><span style=\"font-size:10.0pt; color:#1F497D\">CONFIDENTIALITY NOTICE:</span><span style=\"color:#1F497D\"></span></p>\r\n<p style=\"\"><span style=\"font-size:10.0pt; color:#1F497D\">This e-mail and any attachments contain information from STARA Technologies, Inc., and are intended solely for the use of the named recipient or recipients. This e-mail may contain privileged STARA communications\r\n or work product. Any dissemination of this e-mail by anyone other than intended recipient is strictly prohibited. If you are not a named recipient, you are prohibited from any further viewing of the e-mail or any attachments or from making any use of the e-mail\r\n or attachments. If you believe you have received this e-mail in error, notify the sender immediately and permanently delete the e-mail, any attachments, and all copies thereof from any drives or storage media and destroy any printouts of the e-mail or attachments.</span><span style=\"color:#1F497D\"></span></p>\r\n</div>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<div>\r\n<div style=\"border:none; border-top:solid #B5C4DF 1.0pt; padding:3.0pt 0in 0in 0in\">\r\n<p><b><span style=\"font-size:10.0pt; font-family:\">From:</span></b><span style=\"font-size:10.0pt; font-family:\"> xandolph [email removed]\r\n<br>\r\n<b>Sent:</b> Tuesday, June 26, 2012 11:38 AM<br>\r\n<b>To:</b> Rick Goulian<br>\r\n<b>Subject:</b> Re: Map Reference scale [greatmaps:360629]</span></p>\r\n</div>\r\n</div>\r\n<p></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">From: xandolph</span></p>\r\n<div id=\"ThreadNotificationPostBody\" style=\"margin-bottom:24.0pt\">\r\n<p><span style=\"font-size:9.0pt; font-family:\">Hi!</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Yes of course :-)</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">I just wanted to have a better looking scale that is also easily adaptable, mine looks like this:</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\"><img border=\"0\" id=\"_x0000_i1025\" src=\"https://dl.dropbox.com/u/7026787/scale.jpg\"></span></p>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2012-06-26T11:38:31.38-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "853986",
    "ThreadId": "360629",
    "Html": "<p>Yeah, and you can easily change the Font, size, position, colors, etc...</p>",
    "PostedDate": "2012-06-26T11:39:43.943-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "853987",
    "ThreadId": "360629",
    "Html": "<p>Many thanks again xandolph. I will try it.</p>",
    "PostedDate": "2012-06-26T11:41:07.077-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "869241",
    "ThreadId": "360629",
    "Html": "<p>Sorry, but I don't find the OnPaintOverlays method.</p>\r\n<p>this my using:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">using</span> System;\r\n<span style=\"color: blue;\">using</span> System.Collections.Generic;\r\n<span style=\"color: blue;\">using</span> System.ComponentModel;\r\n<span style=\"color: blue;\">using</span> System.Data;\r\n<span style=\"color: blue;\">using</span> System.Drawing;\r\n<span style=\"color: blue;\">using</span> System.Linq;\r\n<span style=\"color: blue;\">using</span> System.Text;\r\n<span style=\"color: blue;\">using</span> System.Windows.Forms;\r\n<span style=\"color: blue;\">using</span> GMap.NET.MapProviders;\r\n<span style=\"color: blue;\">using</span> GMap.NET.WindowsForms;\r\n<span style=\"color: blue;\">using</span> GMap.NET;\r\n<span style=\"color: blue;\">using</span> System.Drawing.Imaging;\r\n<span style=\"color: blue;\">using</span> System.Drawing.Drawing2D;\r\n<span style=\"color: blue;\">using</span> System.Drawing.Design;</pre>\r\n<pre>Help me, please.</pre>\r\n<pre>Thanks! :)</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2012-07-16T02:12:06.557-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "869781",
    "ThreadId": "360629",
    "Html": "<p>you need to create new class and override the paint function</p>",
    "PostedDate": "2012-07-16T08:58:40.96-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "942095",
    "ThreadId": "360629",
    "Html": "\r\n<p>Hi all,</p>\r\n<p>would one of the C# guru's around here please explain how to implement this replacement scale, in a way that a Visual Basic user would understand,,,&nbsp;</p>\r\n<p>I have tried learning C# but always go back to VB.</p>\r\n<p>So if someone would be kind enough to explain in a step by step process, I would be very grateful.</p>\r\n<p>Sorry to be a pest.</p>\r\n<p>Oh and BTW thankyou for providing this great mapping addon,,, I love it.</p>\r\n<p>&nbsp;</p>\r\n<p>P.s. Sorry for resurrecting an old topic.</p>\r\n",
    "PostedDate": "2012-11-15T05:10:28.06-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "942266",
    "ThreadId": "360629",
    "Html": "\r\n<p>tried c# to vb converter?</p>\r\n",
    "PostedDate": "2012-11-15T12:08:23.4-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "948042",
    "ThreadId": "360629",
    "Html": "\r\n<p>Hi radioman and Xandolph,</p>\r\n<p>IÂ´m trying to implement your solution with latest version of gmap.net but I couldnÂ´t get this. My code is below, what am I doing wrong?</p>\r\n<p>IÂ´ve create a new class Escala extending GMapControl and a method to override OnPaintOverlays (ShowCustomScale doesnÂ´t exist in this context, so itÂ´s commented):</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> System;\r\n<span style=\"color:blue\">using</span> System.Drawing;\r\n<span style=\"color:blue\">using</span> System.Drawing.Drawing2D;\r\n<span style=\"color:blue\">using</span> GMap.NET.WindowsForms;\r\n\r\n<span style=\"color:blue\">namespace</span> Ferramentas.Mapas {\r\n\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> Escala : GMapControl {\r\n\r\n        <span style=\"color:blue\">public</span> Escala() : <span style=\"color:blue\">base</span>() {\r\n            \r\n        }\r\n\r\n        <span style=\"color:blue\">#region</span> Scale variables\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> The font for the m/km markers</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">private</span> Font fontCustomScale = <span style=\"color:blue\">new</span> Font(<span style=\"color:#a31515\">&quot;Arial&quot;</span>, 6);\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> The font for the scale header </span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">private</span> Font fontCustomScaleBold = <span style=\"color:blue\">new</span> Font(<span style=\"color:#a31515\">&quot;Arial&quot;</span>, 10, FontStyle.Bold);\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> The brush for the scale's background</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">private</span> Brush brushCustomScaleBackColor = <span style=\"color:blue\">new</span> SolidBrush(Color.FromArgb(200, 185, 215, 255));\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> The Textcolor for the scale's fonts</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">private</span> Color colorCustomScaleText = Color.FromArgb(20, 65, 140);\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> The width of the scale-rectangle</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">int</span> intScaleRectWidth = 300;\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> The height of the scale-rectangle</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">int</span> intScaleRectHeight = 50;\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> The height of the scale bar</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">int</span> intScaleBarHeight = 10;\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> The padding of the scale</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">int</span> intScaleLeftPadding = 10;\r\n\r\n        <span style=\"color:blue\">#endregion</span>\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Draw extra stuff here (E.g. a legend for the map)</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;drawingContext&quot;&gt;</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> OnPaintOverlays(System.Drawing.Graphics g) {\r\n            <span style=\"color:blue\">base</span>.OnPaintOverlays(g);\r\n\r\n            g.SmoothingMode = SmoothingMode.HighQuality;\r\n\r\n            //<span style=\"color:blue\">if</span> (ShowCustomScale) {\r\n                <span style=\"color:blue\">double</span> resolution = <span style=\"color:blue\">this</span>.MapProvider.Projection.GetGroundResolution((<span style=\"color:blue\">int</span>)<span style=\"color:blue\">this</span>.Zoom, Position.Lat);\r\n\r\n                <span style=\"color:blue\">int</span> px10 = (<span style=\"color:blue\">int</span>)(10.0 / resolution);            <span style=\"color:green\">// 10 meters</span>\r\n                <span style=\"color:blue\">int</span> px100 = (<span style=\"color:blue\">int</span>)(100.0 / resolution);          <span style=\"color:green\">// 100 meters</span>\r\n                <span style=\"color:blue\">int</span> px1000 = (<span style=\"color:blue\">int</span>)(1000.0 / resolution);        <span style=\"color:green\">// 1km   </span>\r\n                <span style=\"color:blue\">int</span> px10000 = (<span style=\"color:blue\">int</span>)(10000.0 / resolution);      <span style=\"color:green\">// 10km  </span>\r\n                <span style=\"color:blue\">int</span> px100000 = (<span style=\"color:blue\">int</span>)(100000.0 / resolution);    <span style=\"color:green\">// 100km  </span>\r\n                <span style=\"color:blue\">int</span> px1000000 = (<span style=\"color:blue\">int</span>)(1000000.0 / resolution);  <span style=\"color:green\">// 1000km</span>\r\n                <span style=\"color:blue\">int</span> px5000000 = (<span style=\"color:blue\">int</span>)(5000000.0 / resolution);  <span style=\"color:green\">// 5000km</span>\r\n\r\n                <span style=\"color:green\">//Check how much width we have and set the scale accordingly</span>\r\n                <span style=\"color:blue\">int</span> availableWidth = (intScaleRectWidth - 2 * intScaleLeftPadding);\r\n\r\n                <span style=\"color:green\">//5000 kilometers:</span>\r\n                <span style=\"color:blue\">if</span> (availableWidth &gt;= px5000000)\r\n                    DrawScale(g, px5000000, availableWidth, 5000, <span style=\"color:#a31515\">&quot;km&quot;</span>);\r\n                <span style=\"color:green\">//1000 kilometers:</span>\r\n                <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (availableWidth &gt;= px1000000)\r\n                    DrawScale(g, px1000000, availableWidth, 1000, <span style=\"color:#a31515\">&quot;km&quot;</span>);\r\n                <span style=\"color:green\">//100 kilometers:</span>\r\n                <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (availableWidth &gt;= px100000)\r\n                    DrawScale(g, px100000, availableWidth, 100, <span style=\"color:#a31515\">&quot;km&quot;</span>);\r\n                <span style=\"color:green\">//10 kilometers:</span>\r\n                <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (availableWidth &gt;= px10000)\r\n                    DrawScale(g, px10000, availableWidth, 10, <span style=\"color:#a31515\">&quot;km&quot;</span>);\r\n                <span style=\"color:green\">//1 kilometers:</span>\r\n                <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (availableWidth &gt;= px1000)\r\n                    DrawScale(g, px1000, availableWidth, 1, <span style=\"color:#a31515\">&quot;km&quot;</span>);\r\n                <span style=\"color:green\">//100 meters:</span>\r\n                <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (availableWidth &gt;= px100)\r\n                    DrawScale(g, px100, availableWidth, 100, <span style=\"color:#a31515\">&quot;m&quot;</span>);\r\n                <span style=\"color:green\">//10 meters:</span>\r\n                <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (availableWidth &gt;= px10)\r\n                    DrawScale(g, px10, availableWidth, 10, <span style=\"color:#a31515\">&quot;m&quot;</span>);\r\n            <span style=\"color:green\">//}</span>\r\n        }\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Draw the scale</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;g&quot;&gt;</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;resLength&quot;&gt;</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;availableWidth&quot;&gt;</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;totalDimenson&quot;&gt;</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;unit&quot;&gt;</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> DrawScale(System.Drawing.Graphics g, <span style=\"color:blue\">int</span> resLength, <span style=\"color:blue\">int</span> availableWidth, <span style=\"color:blue\">int</span> totalDimenson, String unit) {\r\n            Point p = <span style=\"color:blue\">new</span> System.Drawing.Point(<span style=\"color:blue\">this</span>.Width - (intScaleRectWidth + 10), <span style=\"color:blue\">this</span>.Height - (intScaleRectHeight + 10));\r\n            Rectangle rect = <span style=\"color:blue\">new</span> Rectangle(p, <span style=\"color:blue\">new</span> Size(intScaleRectWidth, intScaleRectHeight));\r\n            g.FillRectangle(brushCustomScaleBackColor, rect);\r\n            Pen pen = <span style=\"color:blue\">new</span> Pen(colorCustomScaleText, 1);\r\n            g.DrawRectangle(pen, rect);\r\n            SizeF stringSize = <span style=\"color:blue\">new</span> SizeF();\r\n            Point pos = <span style=\"color:blue\">new</span> Point();\r\n\r\n            <span style=\"color:green\">//Header:</span>\r\n            String scaleString = <span style=\"color:#a31515\">&quot;Escala Grï¿½fica&quot;</span>;\r\n            stringSize = g.MeasureString(scaleString, fontCustomScaleBold);\r\n            pos = <span style=\"color:blue\">new</span> Point(p.X + (rect.Width - (<span style=\"color:blue\">int</span>)stringSize.Width) / 2, p.Y + 3);\r\n            g.DrawString(scaleString, fontCustomScaleBold, pen.Brush, pos);\r\n\r\n            pos = <span style=\"color:blue\">new</span> Point(p.X + intScaleLeftPadding, pos.Y + 30);\r\n\r\n            <span style=\"color:green\">//How many rectangles fit?</span>\r\n            <span style=\"color:blue\">int</span> numRects = availableWidth / resLength;\r\n            Size rectSize = <span style=\"color:blue\">new</span> Size(resLength, intScaleBarHeight);\r\n            <span style=\"color:green\">//Center rectangle</span>\r\n            pos.X += (availableWidth - resLength * numRects) / 2;\r\n            <span style=\"color:green\">//Draw rectangles:</span>\r\n            <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; numRects; i++) {\r\n                Rectangle r = <span style=\"color:blue\">new</span> Rectangle(pos, rectSize);\r\n                <span style=\"color:blue\">if</span> (i % 2 == 0)\r\n                    g.FillRectangle(pen.Brush, r);\r\n                <span style=\"color:blue\">else</span>\r\n                    g.DrawRectangle(pen, r);\r\n                <span style=\"color:green\">//Draw little vertical lines</span>\r\n                g.DrawLine(pen, pos, <span style=\"color:blue\">new</span> Point(pos.X, pos.Y - 5));\r\n                <span style=\"color:green\">//Draw labels:</span>\r\n                <span style=\"color:blue\">int</span> dist = i * totalDimenson;\r\n                stringSize = g.MeasureString(dist + <span style=\"color:#a31515\">&quot; &quot;</span> + unit, fontCustomScale);\r\n                g.DrawString(dist + <span style=\"color:#a31515\">&quot; &quot;</span> + unit, fontCustomScale, pen.Brush, <span style=\"color:blue\">new</span> Point(pos.X - (<span style=\"color:blue\">int</span>)stringSize.Width / 2, pos.Y - (7 + (<span style=\"color:blue\">int</span>)stringSize.Height)));\r\n                <span style=\"color:green\">//Finally set new point</span>\r\n                pos = <span style=\"color:blue\">new</span> Point(pos.X + resLength, pos.Y);\r\n            }\r\n            <span style=\"color:green\">//Draw last line:</span>\r\n            g.DrawLine(pen, pos, <span style=\"color:blue\">new</span> Point(pos.X, pos.Y - 5));\r\n            <span style=\"color:green\">//Draw last label</span>\r\n            <span style=\"color:blue\">int</span> m = numRects * totalDimenson;\r\n            stringSize = g.MeasureString(m + <span style=\"color:#a31515\">&quot; &quot;</span> + unit, fontCustomScale);\r\n            g.DrawString(m + <span style=\"color:#a31515\">&quot; &quot;</span> + unit, fontCustomScale, pen.Brush, <span style=\"color:blue\">new</span> Point(pos.X - (<span style=\"color:blue\">int</span>)stringSize.Width / 2, pos.Y - (7 + (<span style=\"color:blue\">int</span>)stringSize.Height)));\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>After this IÂ´m instatiating EscalaÂ´s class in my Main Form and using:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>Escala escala = <span style=\"color:blue\">new</span> Escala();\r\nescala.MapScaleInfoEnabled = <span style=\"color:blue\">true</span>;\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>But thereÂ´s no scale been showed in my control.</p>\r\n<p>Can you help me to fix this?</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks in advance.</p>\r\n",
    "PostedDate": "2012-11-27T17:53:08.317-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "948598",
    "ThreadId": "360629",
    "Html": "\r\n<p>Hmmm, should work, did you try to debug? Is DrawScale() being called?</p>\r\n",
    "PostedDate": "2012-11-28T13:13:38.713-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949176",
    "ThreadId": "360629",
    "Html": "\r\n<p>Xandolph,</p>\r\n<p>IÂ´ve uploaded a single project that is not working:&nbsp;https://docs.google.com/open?id=0B2L1FltgLC3WaU1CVW1WQ2VCSlU</p>\r\n<p>Can you download it and tell me what is wrong?</p>\r\n<p>Thanks in advance</p>\r\n",
    "PostedDate": "2012-11-29T11:25:43.23-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949184",
    "ThreadId": "360629",
    "Html": "\r\n<p>You didn't use the derived class (&quot;scale&quot;), but the original GMapControl...</p>\r\n<p>When you use the correct control, it works perfectly:</p>\r\n<p><img src=\"https://dl.dropbox.com/u/7026787/Screenshots/Scale.jpg\" alt=\"\"></p>\r\n",
    "PostedDate": "2012-11-29T11:36:26.863-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949185",
    "ThreadId": "360629",
    "Html": "\r\n<p>Where should I change this? Sorry but as many other users here, IÂ´m a newbie in C#.</p>\r\n",
    "PostedDate": "2012-11-29T11:38:09.563-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949186",
    "ThreadId": "360629",
    "Html": "\r\n<p>1. Remove the GMapControl from your Form1</p>\r\n<p>2. Drag the Scale-control from the toolbox to Form1:</p>\r\n<p><img src=\"https://dl.dropbox.com/u/7026787/Screenshots/Scale2.jpg\" alt=\"\"></p>\r\n<p>&nbsp;</p>\r\n<p>3. Learn to program C# :-)</p>\r\n",
    "PostedDate": "2012-11-29T11:42:00.527-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949187",
    "ThreadId": "360629",
    "Html": "\r\n<p>Thank you so much Xandolph... IÂ´m trying to learn! :)</p>\r\n",
    "PostedDate": "2012-11-29T11:43:38.257-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1140361",
    "ThreadId": "360629",
    "Html": "Hi!<br />\n<br />\nI have created a new class in my project:<br />\n<pre><code>using System;\nusing System.Drawing;\nusing System.Drawing.Drawing2D;\nusing GMap.NET.WindowsForms;\n\nnamespace mynamespace {\n    public class Scale : GMapControl {\n        \n        #region Scale variables\n\n        /// &lt;summary&gt;\n        /// The font for the m/km markers\n        /// &lt;/summary&gt;\n        private Font fontCustomScale = new Font(&quot;Arial&quot;, 6);\n\n        /// &lt;summary&gt;\n        /// The font for the scale header \n        /// &lt;/summary&gt;\n        private Font fontCustomScaleBold = new Font(&quot;Arial&quot;, 10, FontStyle.Bold);\n\n        /// &lt;summary&gt;\n        /// The brush for the scale's background\n        /// &lt;/summary&gt;\n        private Brush brushCustomScaleBackColor = new SolidBrush(Color.FromArgb(200, 185, 215, 255));\n\n        /// &lt;summary&gt;\n        /// The Textcolor for the scale's fonts\n        /// &lt;/summary&gt;\n        private Color colorCustomScaleText = Color.FromArgb(20, 65, 140);\n\n        /// &lt;summary&gt;\n        /// The width of the scale-rectangle\n        /// &lt;/summary&gt;\n        private int intScaleRectWidth = 300;\n\n        /// &lt;summary&gt;\n        /// The height of the scale-rectangle\n        /// &lt;/summary&gt;\n        private int intScaleRectHeight = 50;\n\n        /// &lt;summary&gt;\n        /// The height of the scale bar\n        /// &lt;/summary&gt;\n        private int intScaleBarHeight = 10;\n\n        /// &lt;summary&gt;\n        /// The padding of the scale\n        /// &lt;/summary&gt;\n        private int intScaleLeftPadding = 10;\n\n        #endregion\n\n        /// &lt;summary&gt;\n        /// Draw extra stuff here (E.g. a legend for the map)\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;drawingContext&quot;&gt;&lt;/param&gt;\n        protected override void OnPaintOverlays(System.Drawing.Graphics g) {\n            base.OnPaintOverlays(g);\n\n            g.SmoothingMode = SmoothingMode.HighQuality;\n\n            if (true) {\n            double resolution = this.MapProvider.Projection.GetGroundResolution((int)this.Zoom, Position.Lat);\n                \n            int px10 = (int)(10.0 / resolution);            // 10 meters\n            int px100 = (int)(100.0 / resolution);          // 100 meters\n            int px1000 = (int)(1000.0 / resolution);        // 1km   \n            int px10000 = (int)(10000.0 / resolution);      // 10km  \n            int px100000 = (int)(100000.0 / resolution);    // 100km  \n            int px1000000 = (int)(1000000.0 / resolution);  // 1000km\n            int px5000000 = (int)(5000000.0 / resolution);  // 5000km\n\n            //Check how much width we have and set the scale accordingly\n            int availableWidth = (intScaleRectWidth - 2 * intScaleLeftPadding);\n\n            //5000 kilometers:\n            if (availableWidth &gt;= px5000000)\n                DrawScale(g, px5000000, availableWidth, 5000, &quot;km&quot;);\n            //1000 kilometers:\n            else if (availableWidth &gt;= px1000000)\n                DrawScale(g, px1000000, availableWidth, 1000, &quot;km&quot;);\n            //100 kilometers:\n            else if (availableWidth &gt;= px100000)\n                DrawScale(g, px100000, availableWidth, 100, &quot;km&quot;);\n            //10 kilometers:\n            else if (availableWidth &gt;= px10000)\n                DrawScale(g, px10000, availableWidth, 10, &quot;km&quot;);\n            //1 kilometers:\n            else if (availableWidth &gt;= px1000)\n                DrawScale(g, px1000, availableWidth, 1, &quot;km&quot;);\n            //100 meters:\n            else if (availableWidth &gt;= px100)\n                DrawScale(g, px100, availableWidth, 100, &quot;m&quot;);\n            //10 meters:\n            else if (availableWidth &gt;= px10)\n                DrawScale(g, px10, availableWidth, 10, &quot;m&quot;);\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Draw the scale\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;g&quot;&gt;&lt;/param&gt;\n        /// &lt;param name=&quot;resLength&quot;&gt;&lt;/param&gt;\n        /// &lt;param name=&quot;availableWidth&quot;&gt;&lt;/param&gt;\n        /// &lt;param name=&quot;totalDimenson&quot;&gt;&lt;/param&gt;\n        /// &lt;param name=&quot;unit&quot;&gt;&lt;/param&gt;\n        private void DrawScale(System.Drawing.Graphics g, int resLength, int availableWidth, int totalDimenson, String unit) {\n\n            Point p = new System.Drawing.Point(this.Width - (intScaleRectWidth + 10), this.Height - (intScaleRectHeight + 10));\n            Rectangle rect = new Rectangle(p, new Size(intScaleRectWidth, intScaleRectHeight));\n            g.FillRectangle(brushCustomScaleBackColor, rect);\n            Pen pen = new Pen(colorCustomScaleText, 1);\n            g.DrawRectangle(pen, rect);\n            SizeF stringSize = new SizeF();\n            Point pos = new Point();\n\n            //Header:\n            String scaleString = &quot;Escala GrÃ¡fica&quot;;\n            stringSize = g.MeasureString(scaleString, fontCustomScaleBold);\n            pos = new Point(p.X + (rect.Width - (int)stringSize.Width) / 2, p.Y + 3);\n            g.DrawString(scaleString, fontCustomScaleBold, pen.Brush, pos);\n\n            pos = new Point(p.X + intScaleLeftPadding, pos.Y + 30);\n\n            //How many rectangles fit?\n            int numRects = availableWidth / resLength;\n            Size rectSize = new Size(resLength, intScaleBarHeight);\n            //Center rectangle\n            pos.X += (availableWidth - resLength * numRects) / 2;\n            //Draw rectangles:\n            for (int i = 0; i &lt; numRects; i++) {\n                Rectangle r = new Rectangle(pos, rectSize);\n                if (i % 2 == 0)\n                    g.FillRectangle(pen.Brush, r);\n                else\n                    g.DrawRectangle(pen, r);\n                //Draw little vertical lines\n                g.DrawLine(pen, pos, new Point(pos.X, pos.Y - 5));\n                //Draw labels:\n                int dist = i * totalDimenson;\n                stringSize = g.MeasureString(dist + &quot; &quot; + unit, fontCustomScale);\n                g.DrawString(dist + &quot; &quot; + unit, fontCustomScale, pen.Brush, new Point(pos.X - (int)stringSize.Width / 2, pos.Y - (7 + (int)stringSize.Height)));\n                //Finally set new point\n                pos = new Point(pos.X + resLength, pos.Y);\n            }\n            //Draw last line:\n            g.DrawLine(pen, pos, new Point(pos.X, pos.Y - 5));\n            //Draw last label\n            int m = numRects * totalDimenson;\n            stringSize = g.MeasureString(m + &quot; &quot; + unit, fontCustomScale);\n            g.DrawString(m + &quot; &quot; + unit, fontCustomScale, pen.Brush, new Point(pos.X - (int)stringSize.Width / 2, pos.Y - (7 + (int)stringSize.Height)));\n        }\n    }\n}\n</code></pre>\n\nBut I can't see the Scale-controll in the toolbox. Have I missed something?<br />\n<br />\nKind regards!<br />\n",
    "PostedDate": "2013-12-20T09:51:16.697-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]