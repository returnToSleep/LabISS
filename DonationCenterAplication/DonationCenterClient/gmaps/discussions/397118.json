[
  {
    "Id": "918310",
    "ThreadId": "397118",
    "Html": "\r\n<hr>\r\n<p>I am quite new to C# and I am trying to use one common serial port for 3 different forms:</p>\r\n<p>&nbsp;-Form2.cs</p>\r\n<p>-Form3.cs</p>\r\n<p>-Form4.cs</p>\r\n<p>&nbsp;Form1.cs isn't needed for this because it's just needed to launch the programs of the other forms. Basically, all 3 forms must receive data from the same serial port at the same time. The problem I am facing is that only one form can receive data from\r\n the serial port, but the other two forms can't.</p>\r\n<p>&nbsp;I found a question similar to this:</p>\r\n<p><a href=\"http://stackoverflow.com/questions/9358216/using-same-serial-port-data-received-event-on-two-different-forms?answertab=active#tab-top\">http://stackoverflow.com/questions/9358216/using-same-serial-port-data-received-event-on-two-different-forms?answertab=active#tab-top</a></p>\r\n<p>&nbsp;Is that problem similar to mine? If yes, can I know where should I place the sample code in the aforementioned link in my code?</p>\r\n<p>&nbsp;Can someone please help with this? Thanks in advance!</p>\r\n<p>&nbsp;Codes:</p>\r\n<p>-Form1.cs</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> System;\r\n<span style=\"color:blue\">using</span> System.Collections.Generic;\r\n<span style=\"color:blue\">using</span> System.ComponentModel;\r\n<span style=\"color:blue\">using</span> System.Data;\r\n<span style=\"color:blue\">using</span> System.Drawing;\r\n<span style=\"color:blue\">using</span> System.Linq;\r\n<span style=\"color:blue\">using</span> System.Text;\r\n<span style=\"color:blue\">using</span> System.Windows.Forms;\r\n\r\n<span style=\"color:blue\">namespace</span> UAV\r\n{\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> Form1 : Form\r\n    {\r\n        <span style=\"color:blue\">public</span> Form1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> button1_Click(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n            Form2 f2 = <span style=\"color:blue\">new</span> Form2();\r\n            f2.Show();\r\n            Form3 f3 = <span style=\"color:blue\">new</span> Form3();\r\n            f3.Show();\r\n            Form4 f4 = <span style=\"color:blue\">new</span> Form4();\r\n            f4.Show();\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> button2_Click(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n            <span style=\"color:blue\">this</span>.Close();\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Form1_Load(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n    }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<hr>\r\n<p>-Form2.cs</p>\r\n<p>&#65279;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> System;\r\n<span style=\"color:blue\">using</span> System.Collections.Generic;\r\n<span style=\"color:blue\">using</span> System.ComponentModel;\r\n<span style=\"color:blue\">using</span> System.Data;\r\n<span style=\"color:blue\">using</span> System.Drawing;\r\n<span style=\"color:blue\">using</span> System.Linq;\r\n<span style=\"color:blue\">using</span> System.Text;\r\n<span style=\"color:blue\">using</span> System.Globalization;\r\n<span style=\"color:blue\">using</span> GMap.NET;             <span style=\"color:green\">//Required</span>\r\n<span style=\"color:blue\">using</span> GMap.NET.WindowsForms; <span style=\"color:green\">//Required</span>\r\n<span style=\"color:blue\">using</span> GMap.NET.WindowsForms.Markers;\r\n<span style=\"color:blue\">using</span> GMap.NET.MapProviders;<span style=\"color:green\">//Required</span>\r\n<span style=\"color:blue\">using</span> System.Threading;\r\n<span style=\"color:blue\">using</span> System.Windows.Forms;\r\n\r\n<span style=\"color:blue\">namespace</span> UAV\r\n{\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> Form2 : Form\r\n    {\r\n        GMapControl MainMap = <span style=\"color:blue\">new</span> GMapControl();\r\n        <span style=\"color:green\">//Initialise data type for latituide and longitude</span>\r\n        <span style=\"color:blue\">double</span> lat, lng;\r\n        <span style=\"color:green\">//Initialise customise marker (plane maker). Declared as m.</span>\r\n        GMapMarkerImage m = <span style=\"color:blue\">new</span> GMapMarkerImage(<span style=\"color:blue\">new</span> PointLatLng());\r\n        GMapOverlay overlayOne;\r\n\r\n        <span style=\"color:blue\">public</span> Form2()\r\n        {\r\n            InitializeComponent();\r\n\r\n            SuspendLayout();\r\n\r\n            overlayOne = <span style=\"color:blue\">new</span> GMapOverlay(MainMap, <span style=\"color:#a31515\">&quot;OverlayOne&quot;</span>);\r\n            MainMap.MapProvider = GMapProviders.YahooMap;\r\n\r\n            MainMap.SetCurrentPositionByKeywords(<span style=\"color:#a31515\">&quot;Singapore&quot;</span>);\r\n            MainMap.MinZoom = 1;\r\n            MainMap.MaxZoom = 24;\r\n            MainMap.Zoom = 13;\r\n            MainMap.CanDragMap = <span style=\"color:blue\">true</span>;\r\n            MainMap.DragButton = MouseButtons.Left;\r\n            MainMap.Dock = DockStyle.Fill;\r\n            MainMap.Manager.Mode = AccessMode.ServerAndCache;\r\n\r\n            Controls.Add(MainMap);\r\n            ResumeLayout(<span style=\"color:blue\">true</span>);\r\n\r\n\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> button1_Click(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n            <span style=\"color:blue\">if</span> (!serialPort1.IsOpen)    <span style=\"color:green\">//if serial port is not open</span>\r\n                <span style=\"color:blue\">try</span>\r\n                {\r\n                    serialPort1.Open(); <span style=\"color:green\">//Open Serial Port</span>\r\n                    <span style=\"color:blue\">if</span> (lat != 0 &amp;&amp; lng != 0)  <span style=\"color:green\">//Display marker only when GPS has receive data</span>\r\n                    {\r\n                        overlayOne.Markers.Add(m);          <span style=\"color:green\">//Add marker on the position given to the overlayOne layer</span>\r\n                        MainMap.Overlays.Add(overlayOne);   <span style=\"color:green\">//Add overlayOne layer to the MainMap layer</span>\r\n                    }\r\n                }\r\n                <span style=\"color:blue\">catch</span>\r\n                {\r\n                    <span style=\"color:green\">//A message box will display this message, informing user either a wrong port has been chosen, or have not been plugged in.</span>\r\n                    MessageBox.Show(<span style=\"color:#a31515\">&quot;There was an error. Please make sure that the correct port was selected, and the device, plugged in.&quot;</span>);\r\n                }\r\n\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> button2_Click(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n            <span style=\"color:blue\">if</span> (serialPort1.IsOpen)                <span style=\"color:green\">// if Serial Port is open</span>\r\n            {\r\n                serialPort1.Close();               <span style=\"color:green\">//Close Serial</span>\r\n                overlayOne.Markers.Remove(m);\r\n            }\r\n        }\r\n\r\n        <span style=\"color:green\">//When microsoft visual studio receive data</span>\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> serialPort1_DataReceived(<span style=\"color:blue\">object</span> sender, System.IO.Ports.SerialDataReceivedEventArgs e)\r\n        {\r\n            <span style=\"color:blue\">this</span>.Invoke(<span style=\"color:blue\">new</span> EventHandler(DoUpdate));    <span style=\"color:green\">//for function DoUpdate</span>\r\n\r\n            <span style=\"color:green\">//Pause Microsoft Visual Studio for 100 milliseconds from receiving data, </span>\r\n            <span style=\"color:green\">//to ensure serialPort can be close successfully</span>\r\n            Thread.Sleep(100);\r\n        }\r\n\r\n        <span style=\"color:green\">//Function for updating data. Declared as DoUpdate.</span>\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> DoUpdate(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n            <span style=\"color:blue\">string</span>[] c = serialPort1.ReadLine().Split(<span style=\"color:#a31515\">','</span>);  <span style=\"color:green\">//Stored data seperately by using array &amp; using the Split() function</span>\r\n\r\n            lat = Convert.ToDouble(c[9]);               <span style=\"color:green\">//Convert Latitude string data to double data</span>\r\n            lng = Convert.ToDouble(c[10]);              <span style=\"color:green\">//Convert Longitude string data to double data</span>\r\n\r\n            <span style=\"color:green\">//Input lat and lng data in m.</span>\r\n            <span style=\"color:green\">//Updating the position of the marker</span>\r\n            m.Position = <span style=\"color:blue\">new</span> PointLatLng(lat, lng);\r\n          \r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Form2_Load(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n    }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<hr>\r\n<p>-Form3.cs</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> System;\r\n<span style=\"color:blue\">using</span> System.Collections.Generic;\r\n<span style=\"color:blue\">using</span> System.ComponentModel;\r\n<span style=\"color:blue\">using</span> System.Data;\r\n<span style=\"color:blue\">using</span> System.Drawing;\r\n<span style=\"color:blue\">using</span> System.Linq;\r\n<span style=\"color:blue\">using</span> System.Text;\r\n<span style=\"color:blue\">using</span> System.Threading;\r\n<span style=\"color:blue\">using</span> System.Windows.Forms;\r\n\r\n<span style=\"color:blue\">namespace</span> UAV\r\n{\r\n\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> Form3 : Form\r\n    {\r\n        <span style=\"color:blue\">public</span> Form3()\r\n        {\r\n            InitializeComponent();\r\n\r\n        }\r\n \r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> pictureBox1_Click(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n            <span style=\"color:blue\">if</span> (!serialPort1.IsOpen)    <span style=\"color:green\">//if serial port is not open</span>\r\n                <span style=\"color:blue\">try</span>\r\n                {\r\n                    serialPort1.Open(); <span style=\"color:green\">//Open Serial Port</span>\r\n\r\n                    <span style=\"color:green\">//Enable blocks to have colour</span>\r\n                    rectangleShape1.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Solid;\r\n                    rectangleShape2.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Solid;\r\n                    rectangleShape3.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Solid;\r\n                    rectangleShape4.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Solid;\r\n                    rectangleShape5.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Solid;\r\n                    rectangleShape6.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Solid;\r\n                    rectangleShape7.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Solid;\r\n                    rectangleShape8.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Solid;\r\n                    rectangleShape9.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Solid;\r\n                }\r\n                <span style=\"color:blue\">catch</span>\r\n                {\r\n                    <span style=\"color:green\">//A message box will display this message, informing user either a wrong port has been chosen, or have not been plugged in.</span>\r\n                    MessageBox.Show(<span style=\"color:#a31515\">&quot;There was an error. Please make sure that the correct port was selected, and the device, plugged in.&quot;</span>);\r\n                }\r\n\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> button2_Click(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n            <span style=\"color:blue\">if</span> (serialPort1.IsOpen)                <span style=\"color:green\">// if serial port is open</span>\r\n            {\r\n                serialPort1.Close();                   <span style=\"color:green\">// Close serial Port </span>\r\n\r\n                <span style=\"color:green\">//Clear data in textboxes</span>\r\n                FrontSonar.Text = <span style=\"color:#a31515\">&quot;    &quot;</span>;\r\n                LeftSonar.Text = <span style=\"color:#a31515\">&quot;   &quot;</span>;\r\n                RightSonar.Text = <span style=\"color:#a31515\">&quot;    &quot;</span>;\r\n\r\n                <span style=\"color:green\">//Clear colours in the boxes</span>\r\n                rectangleShape1.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Transparent;\r\n                rectangleShape2.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Transparent;\r\n                rectangleShape3.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Transparent;\r\n                rectangleShape4.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Transparent;\r\n                rectangleShape5.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Transparent;\r\n                rectangleShape6.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Transparent;\r\n                rectangleShape7.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Transparent;\r\n                rectangleShape8.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Transparent;\r\n                rectangleShape9.FillStyle = Microsoft.VisualBasic.PowerPacks.FillStyle.Transparent;\r\n            }\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> serialPort1_DataReceived(<span style=\"color:blue\">object</span> sender, System.IO.Ports.SerialDataReceivedEventArgs e) <span style=\"color:green\">//When microsoft visual studio receive data</span>\r\n        {\r\n            <span style=\"color:blue\">this</span>.Invoke(<span style=\"color:blue\">new</span> EventHandler(DoUpdate1)); <span style=\"color:green\">//To update and ensure sonar data infront of UAV can be displayed without error</span>\r\n            <span style=\"color:blue\">this</span>.Invoke(<span style=\"color:blue\">new</span> EventHandler(DoUpdate2)); <span style=\"color:green\">//To update and ensure sonar data left side of UAV can be displayed without error</span>\r\n            <span style=\"color:blue\">this</span>.Invoke(<span style=\"color:blue\">new</span> EventHandler(DoUpdate3)); <span style=\"color:green\">//To update and ensure sonar data on the right side of UAV can be displayed without error</span>\r\n\r\n            Thread.Sleep(100);\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> DoUpdate1(<span style=\"color:blue\">object</span> s, EventArgs e) <span style=\"color:green\">//Display for Sonar infront of UAV</span>\r\n        {\r\n            <span style=\"color:blue\">string</span>[] c = serialPort1.ReadLine().Split(<span style=\"color:#a31515\">','</span>);  <span style=\"color:green\">//Stored data seperately by using array &amp; using the Split() function</span>\r\n            FrontSonar.Text = c[1] &#43; <span style=\"color:#a31515\">&quot;\\n&quot;</span>;\r\n            <span style=\"color:blue\">double</span> d = Convert.ToDouble(c[1]);\r\n\r\n            <span style=\"color:blue\">if</span> (d &gt; 500)\r\n            {\r\n                <span style=\"color:green\">//Fill blocks with green</span>\r\n                <span style=\"color:blue\">this</span>.rectangleShape1.FillColor = System.Drawing.Color.Green;\r\n                <span style=\"color:blue\">this</span>.rectangleShape2.FillColor = System.Drawing.Color.Green;\r\n                <span style=\"color:blue\">this</span>.rectangleShape3.FillColor = System.Drawing.Color.Green;\r\n            }\r\n            <span style=\"color:blue\">else</span>\r\n                <span style=\"color:blue\">if</span> (d &gt; 400 &amp;&amp; d &lt;= 500)\r\n                {\r\n                    <span style=\"color:green\">//Fill block with Orange colour</span>\r\n                    <span style=\"color:blue\">this</span>.rectangleShape1.FillColor = System.Drawing.Color.Orange;\r\n                    <span style=\"color:blue\">this</span>.rectangleShape2.FillColor = System.Drawing.Color.Orange;\r\n\r\n                    <span style=\"color:green\">//Fill block with Lavender colour</span>\r\n                    <span style=\"color:blue\">this</span>.rectangleShape3.FillColor = System.Drawing.Color.Lavender;\r\n                }\r\n                <span style=\"color:blue\">else</span>\r\n                    <span style=\"color:blue\">if</span> (d &lt;= 400)\r\n                    {\r\n                        <span style=\"color:green\">//Fill block with red colour</span>\r\n                        <span style=\"color:blue\">this</span>.rectangleShape1.FillColor = System.Drawing.Color.Red;\r\n\r\n                        <span style=\"color:green\">//Fill block with Lavender colour</span>\r\n                        <span style=\"color:blue\">this</span>.rectangleShape2.FillColor = System.Drawing.Color.Lavender;\r\n                        <span style=\"color:blue\">this</span>.rectangleShape3.FillColor = System.Drawing.Color.Lavender;\r\n                    }\r\n\r\n        }\r\n\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> DoUpdate2(<span style=\"color:blue\">object</span> s, EventArgs e) <span style=\"color:green\">//Display for Sonar on the left side of UAV</span>\r\n        {\r\n            <span style=\"color:blue\">string</span>[] c = serialPort1.ReadLine().Split(<span style=\"color:#a31515\">','</span>);  <span style=\"color:green\">//Stored data seperately by using array &amp; using the Split() function</span>\r\n            LeftSonar.Text = c[2] &#43; <span style=\"color:#a31515\">&quot;\\n&quot;</span>;\r\n            <span style=\"color:blue\">double</span> d = Convert.ToDouble(c[2]);\r\n\r\n            <span style=\"color:blue\">if</span> (d &gt; 500)\r\n            {\r\n                <span style=\"color:green\">//Fill blocks with green</span>\r\n                <span style=\"color:blue\">this</span>.rectangleShape9.FillColor = System.Drawing.Color.Green;\r\n                <span style=\"color:blue\">this</span>.rectangleShape8.FillColor = System.Drawing.Color.Green;\r\n                <span style=\"color:blue\">this</span>.rectangleShape7.FillColor = System.Drawing.Color.Green;\r\n            }\r\n            <span style=\"color:blue\">else</span>\r\n                <span style=\"color:blue\">if</span> (d &gt; 400 &amp;&amp; d &lt;= 500)\r\n                {\r\n                    <span style=\"color:green\">//Fill blocks with orange</span>\r\n                    <span style=\"color:blue\">this</span>.rectangleShape9.FillColor = System.Drawing.Color.Orange;\r\n                    <span style=\"color:blue\">this</span>.rectangleShape8.FillColor = System.Drawing.Color.Orange;\r\n\r\n                    <span style=\"color:green\">//Fill block with Lavender colour</span>\r\n                    <span style=\"color:blue\">this</span>.rectangleShape7.FillColor = System.Drawing.Color.Lavender;\r\n                }\r\n                <span style=\"color:blue\">else</span>\r\n                    <span style=\"color:blue\">if</span> (d &lt;= 400)\r\n                    {\r\n                        <span style=\"color:green\">//Fill block with red colour</span>\r\n                        <span style=\"color:blue\">this</span>.rectangleShape9.FillColor = System.Drawing.Color.Red;\r\n\r\n                        <span style=\"color:green\">//Fill block with Lavender colour</span>\r\n                        <span style=\"color:blue\">this</span>.rectangleShape8.FillColor = System.Drawing.Color.Lavender;\r\n                        <span style=\"color:blue\">this</span>.rectangleShape7.FillColor = System.Drawing.Color.Lavender;\r\n                    }\r\n\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> DoUpdate3(<span style=\"color:blue\">object</span> s, EventArgs e) <span style=\"color:green\">//Display for Sonar on the right side of UAV</span>\r\n        {\r\n            <span style=\"color:blue\">string</span>[] c = serialPort1.ReadLine().Split(<span style=\"color:#a31515\">','</span>);  <span style=\"color:green\">//Stored data seperately by using array &amp; using the Split() function</span>\r\n            RightSonar.Text = c[3] &#43; <span style=\"color:#a31515\">&quot;\\n&quot;</span>;\r\n            <span style=\"color:blue\">double</span> d = Convert.ToDouble(c[3]);\r\n\r\n            <span style=\"color:blue\">if</span> (d &gt; 500)\r\n            {\r\n                <span style=\"color:green\">//Fill blocks with green</span>\r\n                <span style=\"color:blue\">this</span>.rectangleShape4.FillColor = System.Drawing.Color.Green;\r\n                <span style=\"color:blue\">this</span>.rectangleShape5.FillColor = System.Drawing.Color.Green;\r\n                <span style=\"color:blue\">this</span>.rectangleShape6.FillColor = System.Drawing.Color.Green;\r\n            }\r\n            <span style=\"color:blue\">else</span>\r\n                <span style=\"color:blue\">if</span> (d &gt; 400 &amp;&amp; d &lt;= 500)\r\n                {\r\n                    <span style=\"color:green\">//Fill blocks with orange</span>\r\n                    <span style=\"color:blue\">this</span>.rectangleShape4.FillColor = System.Drawing.Color.Orange;\r\n                    <span style=\"color:blue\">this</span>.rectangleShape5.FillColor = System.Drawing.Color.Orange;\r\n\r\n                    <span style=\"color:green\">//Fill block with Lavender colour</span>\r\n                    <span style=\"color:blue\">this</span>.rectangleShape6.FillColor = System.Drawing.Color.Lavender;\r\n                }\r\n                <span style=\"color:blue\">else</span>\r\n                    <span style=\"color:blue\">if</span> (d &lt;= 400)\r\n                    {\r\n                        <span style=\"color:green\">//Fill block with red colour</span>\r\n                        <span style=\"color:blue\">this</span>.rectangleShape4.FillColor = System.Drawing.Color.Red;\r\n\r\n                        <span style=\"color:green\">//Fill block with Lavender colour</span>\r\n                        <span style=\"color:blue\">this</span>.rectangleShape5.FillColor = System.Drawing.Color.Lavender;\r\n                        <span style=\"color:blue\">this</span>.rectangleShape6.FillColor = System.Drawing.Color.Lavender;\r\n                    }\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Form3_Load(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n    }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<hr>\r\n<p>-Form4.cs (Still in progress)</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> System;\r\n<span style=\"color:blue\">using</span> System.Collections.Generic;\r\n<span style=\"color:blue\">using</span> System.ComponentModel;\r\n<span style=\"color:blue\">using</span> System.Data;\r\n<span style=\"color:blue\">using</span> System.Drawing;\r\n<span style=\"color:blue\">using</span> System.Linq;\r\n<span style=\"color:blue\">using</span> System.Text;\r\n<span style=\"color:blue\">using</span> System.Windows.Forms;\r\n\r\n<span style=\"color:blue\">namespace</span> UAV\r\n{\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> Form4 : Form\r\n    {\r\n        <span style=\"color:blue\">public</span> Form4()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n    }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-09-27T01:46:19.943-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "919975",
    "ThreadId": "397118",
    "Html": "<p>..it's not really project related, but try experiment on simpler code..</p>",
    "PostedDate": "2012-10-01T05:13:07.573-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]