[
  {
    "Id": "476865",
    "ThreadId": "222574",
    "Html": "Hi,\r\nI try to the followed code:\r\nMainMap.Manager.Language = LanguageType.Russian;\r\nvar ll = MainMap.Manager.GetLatLngFromGeocoder(keyws, out dd);\r\n\r\nWhere keyws - some keywords in Russian language. I got dd = G_GEO_UNKNOWN_ADDRESS.\r\n\r\nIs it possible to search on Russian keywords?\r\n\r\nThanks\r\nAlex",
    "PostedDate": "2010-08-05T06:06:02.757-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "476918",
    "ThreadId": "222574",
    "Html": "<p>i don't know, hm.. does maps.google.com work with&nbsp;Russian keywords?</p>",
    "PostedDate": "2010-08-05T07:33:30.8-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "477718",
    "ThreadId": "222574",
    "Html": "Why no?\r\nOn http://maps.google.com/maps?hl=ru&tab=wl I can search with russian keywords.",
    "PostedDate": "2010-08-07T23:14:54.73-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "477941",
    "ThreadId": "222574",
    "Html": "<p>i see, then need i'll need to make some investigation ;}</p>",
    "PostedDate": "2010-08-09T00:47:45.67-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "478416",
    "ThreadId": "222574",
    "Html": "I think in\r\n\r\n      internal string MakeGeocoderUrl(string keywords)\r\n      {\r\n         string key = keywords.Replace(' ', '+');\r\n         return string.Format(&quot;http://maps.google.com/maps/geo?q={0}&output=csv&key={1}&quot;, key, GoogleMapsAPIKey);\r\n      }\r\n\r\nlanguage parameter missing hl={0}.\r\n\r\nMust be:\r\n\r\n         return string.Format(&quot;http://maps.google.com/maps/geo?hl={0}&q={1}&output=csv&key={1}&quot;, LanguageStr, key, GoogleMapsAPIKey);\r\n\r\nHow do you think?",
    "PostedDate": "2010-08-09T22:57:11.353-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "478418",
    "ThreadId": "222574",
    "Html": "<p>is it working?</p>",
    "PostedDate": "2010-08-09T23:02:41.603-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "478959",
    "ThreadId": "222574",
    "Html": "I changed the function and now search by keyword works in different languages.\r\n\r\n     internal string MakeGeocoderUrl(string keywords)\r\n      {\r\n         string key = keywords.Replace(' ', '+');\r\n         return string.Format(&quot;http://maps.google.com/maps/geo?q={0}&hl={1}&output=csv&key={2}&quot;, key, LanguageStr, GoogleMapsAPIKey);\r\n      }\r\n\r\nBut I have other problem. Geocoding function does not work for all countries.\r\nFor example, for Israel this function does not work. This is written in the documentation Google map API.\r\nNevertheless, the following query works fine in browser even with keywords in Hebrew:\r\n\r\nhttp://maps.google.com/maps?q=Stengade,2200,Denmark&hl=iw\r\n\r\nIs there a library function that uses only search for keywords without geocoding?",
    "PostedDate": "2010-08-11T00:10:50.577-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "478981",
    "ThreadId": "222574",
    "Html": "<p>seems maps.google.com use search in more advanced way somehow, i don't know for such a library,</p>\r\n<p>but thanks for fixed code, i'l commit it soon</p>",
    "PostedDate": "2010-08-11T01:23:50.283-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479060",
    "ThreadId": "222574",
    "Html": "OK. I added the following function to gmapcontrol.cs\r\n\r\n      /// &lt;summary&gt;\r\n      /// set current position using keywords without Geocoding\r\n      /// &lt;/summary&gt;\r\n      /// &lt;param name=&quot;keys&quot;&gt;&lt;/param&gt;\r\n      /// &lt;returns&gt;true if successfull&lt;/returns&gt;\r\n      public GeoCoderStatusCode SetCurrentPositionByKeywords2(string keys)\r\n      {\r\n          GeoCoderStatusCode status = GeoCoderStatusCode.Unknow;\r\n          PointLatLng? pos = Manager.GetLatLngFromAddress(keys, out status);\r\n          if (pos.HasValue && status == GeoCoderStatusCode.G_GEO_SUCCESS)\r\n          {\r\n              CurrentPosition = pos.Value;\r\n          }\r\n\r\n          return status;\r\n      }\r\n\r\nAnd to following functions to gmap.cs\r\n\r\n\r\n      /// &lt;summary&gt;\r\n      /// gets lat, lng from address keys\r\n      /// &lt;/summary&gt;\r\n      /// &lt;param name=&quot;keywords&quot;&gt;&lt;/param&gt;\r\n      /// &lt;param name=&quot;status&quot;&gt;&lt;/param&gt;\r\n      /// &lt;returns&gt;&lt;/returns&gt;\r\n      public PointLatLng? GetLatLngFromAddress(string keywords, out GeoCoderStatusCode status)\r\n      {\r\n          return GetLatLngFromAddressUrl(MakeAddressUrl(keywords), UseGeocoderCache, out status);\r\n      }\r\n\r\n\r\n      /// &lt;summary&gt;\r\n      /// makes url for address\r\n      /// &lt;/summary&gt;\r\n      /// &lt;param name=&quot;keywords&quot;&gt;&lt;/param&gt;\r\n      /// &lt;returns&gt;&lt;/returns&gt;\r\n      internal string MakeAddressUrl(string keywords)\r\n      {\r\n          string key = keywords.Replace(' ', '+');\r\n          return string.Format(&quot;http://maps.google.com/maps?q={0}&hl={1}&quot;, key, LanguageStr);\r\n      }\r\n\r\n\r\n      /// &lt;summary&gt;\r\n      /// gets lat and lng from address url\r\n      /// &lt;/summary&gt;\r\n      /// &lt;param name=&quot;url&quot;&gt;&lt;/param&gt;\r\n      /// &lt;param name=&quot;useCache&quot;&gt;&lt;/param&gt;\r\n      /// &lt;param name=&quot;status&quot;&gt;&lt;/param&gt;\r\n      /// &lt;returns&gt;&lt;/returns&gt;\r\n      internal PointLatLng? GetLatLngFromAddressUrl(string url, bool useCache, out GeoCoderStatusCode status)\r\n      {\r\n          status = GeoCoderStatusCode.Unknow;\r\n          PointLatLng? ret = null;\r\n          try\r\n          {\r\n              string urlEnd = url.Substring(url.IndexOf(&quot;maps?q=&quot;));\r\n\r\n#if !PocketPC\r\n              char[] ilg = Path.GetInvalidFileNameChars();\r\n#else\r\n            char[] ilg = new char[41];\r\n            for(int i = 0; i &lt; 32; i++)\r\n               ilg[i] = (char) i;\r\n\r\n            ilg[32] = '&quot;';\r\n            ilg[33] = '&lt;';\r\n            ilg[34] = '&gt;';\r\n            ilg[35] = '|';\r\n            ilg[36] = '?';\r\n            ilg[37] = ':';\r\n            ilg[38] = '/';\r\n            ilg[39] = '\\\\';\r\n            ilg[39] = '*';\r\n#endif\r\n\r\n              foreach (char c in ilg)\r\n              {\r\n                  urlEnd = urlEnd.Replace(c, '_');\r\n              }\r\n\r\n              string addr = useCache ? Cache.Instance.GetGeocoderFromCache(urlEnd) : string.Empty;\r\n\r\n              if (string.IsNullOrEmpty(addr))\r\n              {\r\n                  HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\r\n                  if (Proxy != null)\r\n                  {\r\n                      request.Proxy = Proxy;\r\n#if !PocketPC\r\n                      request.PreAuthenticate = true;\r\n#endif\r\n                  }\r\n                  else\r\n                  {\r\n#if !PocketPC\r\n                      request.Proxy = WebRequest.DefaultWebProxy;\r\n#else\r\n                  request.Proxy = GlobalProxySelection.GetEmptyWebProxy();\r\n#endif\r\n                  }\r\n\r\n                  request.UserAgent = UserAgent;\r\n                  request.Timeout = Timeout;\r\n                  request.ReadWriteTimeout = Timeout * 6;\r\n                  request.KeepAlive = false;\r\n\r\n                  using (HttpWebResponse response = request.GetResponse() as HttpWebResponse)\r\n                  {\r\n                      using (Stream responseStream = response.GetResponseStream())\r\n                      {\r\n                          using (StreamReader read = new StreamReader(responseStream))\r\n                          {\r\n                              addr = read.ReadToEnd();\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n\r\n              // parse values\r\n              if (addr != String.Empty)\r\n              {\r\n                  var lt_ln_s = addr.IndexOf(&quot;latlng:{&quot;);\r\n                  if (lt_ln_s != -1)\r\n                  {\r\n                      var lt_ln_e = addr.IndexOf(&quot;}&quot;, lt_ln_s);\r\n                      if (lt_ln_e != -1)\r\n                      {\r\n                          try\r\n                          {\r\n                              var ltlns = addr.Substring(lt_ln_s, lt_ln_e - lt_ln_s);\r\n                              var lts = ltlns.Substring(12, 18);\r\n                              var ltn = ltlns.Substring(35, 18);\r\n                              double lat = double.Parse(lts, CultureInfo.InvariantCulture);\r\n                              double lng = double.Parse(ltn, CultureInfo.InvariantCulture);\r\n                              status = GeoCoderStatusCode.G_GEO_SUCCESS;\r\n                              ret = new PointLatLng(lat, lng);\r\n                          }\r\n                          catch (Exception)\r\n                          {\r\n                              throw;\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          catch (Exception ex)\r\n          {\r\n              ret = null;\r\n              Debug.WriteLine(&quot;GetLatLngFromGeocoderUrl: &quot; + ex.ToString());\r\n          }\r\n          return ret;\r\n      }\r\n\r\nNow on calling function SetCurrentPositionByKeywords2 you can search without geocoding.\r\nOnly problem is that if Google changes the answer then the function will not work.\r\nPerhaps you can find a more elegant solution of this problem.\r\n",
    "PostedDate": "2010-08-11T05:23:43.803-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479064",
    "ThreadId": "222574",
    "Html": "<p>any way to format code?</p>",
    "PostedDate": "2010-08-11T05:27:03.077-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479080",
    "ThreadId": "222574",
    "Html": "After copying the code looked OK. How to format code in posts?\r\n\r\n",
    "PostedDate": "2010-08-11T05:53:13.033-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479514",
    "ThreadId": "222574",
    "Html": "OK. I added the following function to gmapcontrol.cs\r\n\r\n/// &lt;summary&gt;\r\n\r\n/// set current position using keywords without Geocoding\r\n\r\n/// &lt;/summary&gt;\r\n\r\n/// &lt;param name=&quot;keys&quot;&gt;&lt;/param&gt;\r\n\r\n/// &lt;returns&gt;true if successfull&lt;/returns&gt;\r\n\r\npublic GeoCoderStatusCode SetCurrentPositionByKeywords2(string keys)\r\n\r\n{\r\n\r\n    GeoCoderStatusCode status = GeoCoderStatusCode.Unknow;\r\n\r\n    PointLatLng? pos = Manager.GetLatLngFromAddress(keys, out status);\r\n\r\n    if (pos.HasValue && status == GeoCoderStatusCode.G_GEO_SUCCESS)\r\n\r\n    {\r\n\r\n        CurrentPosition = pos.Value;\r\n\r\n    }\r\n\r\n    return status;\r\n\r\n}\r\n\r\n\r\nAnd to following functions to gmap.cs\r\n\r\n\r\n/// &lt;summary&gt;\r\n\r\n/// gets lat, lng from address keys\r\n\r\n/// &lt;/summary&gt;\r\n\r\n/// &lt;param name=&quot;keywords&quot;&gt;&lt;/param&gt;\r\n\r\n/// &lt;param name=&quot;status&quot;&gt;&lt;/param&gt;\r\n\r\n/// &lt;returns&gt;&lt;/returns&gt;\r\n\r\npublic PointLatLng? GetLatLngFromAddress(string keywords, out GeoCoderStatusCode status)\r\n\r\n{\r\n\r\n    return GetLatLngFromAddressUrl(MakeAddressUrl(keywords), UseGeocoderCache, out status);\r\n\r\n}\r\n\r\n\r\n/// &lt;summary&gt;\r\n\r\n/// makes url for address\r\n\r\n/// &lt;/summary&gt;\r\n\r\n/// &lt;param name=&quot;keywords&quot;&gt;&lt;/param&gt;\r\n\r\n/// &lt;returns&gt;&lt;/returns&gt;\r\n\r\ninternal string MakeAddressUrl(string keywords)\r\n\r\n{\r\n\r\n    string key = keywords.Replace(' ', '+');\r\n\r\n    return string.Format(&quot;http://maps.google.com/maps?q={0}&hl={1}&quot;, key, LanguageStr);\r\n\r\n}\r\n\r\n\r\n/// &lt;summary&gt;\r\n\r\n/// gets lat and lng from address url\r\n\r\n/// &lt;/summary&gt;\r\n\r\n/// &lt;param name=&quot;url&quot;&gt;&lt;/param&gt;\r\n\r\n/// &lt;param name=&quot;useCache&quot;&gt;&lt;/param&gt;\r\n\r\n/// &lt;param name=&quot;status&quot;&gt;&lt;/param&gt;\r\n\r\n/// &lt;returns&gt;&lt;/returns&gt;\r\n\r\ninternal PointLatLng? GetLatLngFromAddressUrl(string url, bool useCache, out GeoCoderStatusCode status)\r\n\r\n{\r\n\r\n          status = GeoCoderStatusCode.Unknow;\r\n\r\n          PointLatLng? ret = null;\r\n\r\n          try\r\n\r\n          {\r\n\r\n              string urlEnd = url.Substring(url.IndexOf(&quot;maps?q=&quot;));\r\n\r\n#if !PocketPC\r\n\r\n              char[] ilg = Path.GetInvalidFileNameChars();\r\n\r\n#else\r\n\r\n            char[] ilg = new char[41];\r\n\r\n            for(int i = 0; i &lt; 32; i++)\r\n\r\n               ilg[i] = (char) i;\r\n\r\n            ilg[32] = '&quot;';\r\n\r\n            ilg[33] = '&lt;';\r\n\r\n            ilg[34] = '&gt;';\r\n\r\n            ilg[35] = '|';\r\n\r\n            ilg[36] = '?';\r\n\r\n            ilg[37] = ':';\r\n\r\n            ilg[38] = '/';\r\n\r\n            ilg[39] = '\\\\';\r\n\r\n            ilg[39] = '*';\r\n\r\n#endif\r\n\r\n              foreach (char c in ilg)\r\n\r\n              {\r\n\r\n                  urlEnd = urlEnd.Replace(c, '_');\r\n\r\n              }\r\n\r\n              string addr = useCache ? Cache.Instance.GetGeocoderFromCache(urlEnd) : string.Empty;\r\n\r\n\r\n              if (string.IsNullOrEmpty(addr))\r\n\r\n              {\r\n\r\n                  HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\r\n\r\n                  if (Proxy != null)\r\n\r\n                  {\r\n\r\n                      request.Proxy = Proxy;\r\n\r\n#if !PocketPC\r\n\r\n                      request.PreAuthenticate = true;\r\n\r\n#endif\r\n\r\n                  }\r\n\r\n                  else\r\n\r\n                  {\r\n\r\n#if !PocketPC\r\n\r\n                      request.Proxy = WebRequest.DefaultWebProxy;\r\n\r\n#else\r\n\r\n                  request.Proxy = GlobalProxySelection.GetEmptyWebProxy();\r\n\r\n#endif\r\n\r\n                  }\r\n\r\n                  request.UserAgent = UserAgent;\r\n\r\n                  request.Timeout = Timeout;\r\n\r\n                  request.ReadWriteTimeout = Timeout * 6;\r\n\r\n                  request.KeepAlive = false;\r\n\r\n                  using (HttpWebResponse response = request.GetResponse() as HttpWebResponse)\r\n\r\n                  {\r\n\r\n                      using (Stream responseStream = response.GetResponseStream())\r\n\r\n                      {\r\n\r\n                          using (StreamReader read = new StreamReader(responseStream))\r\n\r\n                          {\r\n\r\n                              addr = read.ReadToEnd();\r\n\r\n                          }\r\n\r\n                      }\r\n\r\n                  }\r\n\r\n              }\r\n\r\n\r\n              // parse values\r\n\r\n              if (addr != String.Empty)\r\n\r\n              {\r\n\r\n                  var lt_ln_s = addr.IndexOf(&quot;latlng:{&quot;);\r\n\r\n                  if (lt_ln_s != -1)\r\n\r\n                  {\r\n\r\n                      var lt_ln_e = addr.IndexOf(&quot;}&quot;, lt_ln_s);\r\n\r\n                      if (lt_ln_e != -1)\r\n\r\n                      {\r\n\r\n                          try\r\n\r\n                          {\r\n\r\n                              var ltlns = addr.Substring(lt_ln_s, lt_ln_e - lt_ln_s);\r\n\r\n                              var lts = ltlns.Substring(12, 18);\r\n\r\n                              var ltn = ltlns.Substring(35, 18);\r\n\r\n                              double lat = double.Parse(lts, CultureInfo.InvariantCulture);\r\n\r\n                              double lng = double.Parse(ltn, CultureInfo.InvariantCulture);\r\n\r\n                              status = GeoCoderStatusCode.G_GEO_SUCCESS;\r\n\r\n                              ret = new PointLatLng(lat, lng);\r\n\r\n                          }\r\n\r\n                          catch (Exception)\r\n\r\n                          {\r\n\r\n                              throw;\r\n\r\n                          }\r\n\r\n                      }\r\n\r\n                  }\r\n\r\n              }\r\n\r\n          }\r\n\r\n          catch (Exception ex)\r\n\r\n          {\r\n\r\n              ret = null;\r\n\r\n              Debug.WriteLine(&quot;GetLatLngFromGeocoderUrl: &quot; + ex.ToString());\r\n\r\n          }\r\n\r\n          return ret;\r\n\r\n      }\r\n\r\n\r\nNow on calling function SetCurrentPositionByKeywords2 you can search without geocoding.\r\n\r\nOnly problem is that if Google changes the answer then the function will not work.\r\n\r\nPerhaps you can find a more elegant solution of this problem.\r\n",
    "PostedDate": "2010-08-11T23:27:39.787-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479518",
    "ThreadId": "222574",
    "Html": "On my previous post you can press 'Reply with quote' for obtaining formatted code.",
    "PostedDate": "2010-08-11T23:30:54.833-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479519",
    "ThreadId": "222574",
    "Html": "<p>just click 'insert code snippet' &lt;/&gt;</p>",
    "PostedDate": "2010-08-11T23:31:31.937-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479575",
    "ThreadId": "222574",
    "Html": "<p>I used Google Chrome browser and it does not display the panel with editiong tools.</p>\r\n<p>OK. I added the following function to gmapcontrol.cs</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>      <span style=\"color:blue\">public</span> GeoCoderStatusCode SetCurrentPositionByKeywords2(<span style=\"color:blue\">string</span> keys)\r\n      {\r\n          GeoCoderStatusCode status = GeoCoderStatusCode.Unknow;\r\n          PointLatLng? pos = Manager.GetLatLngFromAddress(keys, <span style=\"color:blue\">out</span> status);\r\n          <span style=\"color:blue\">if</span> (pos.HasValue &amp;&amp; status == GeoCoderStatusCode.G_GEO_SUCCESS)\r\n          {\r\n              CurrentPosition = pos.Value;\r\n          }\r\n\r\n          <span style=\"color:blue\">return</span> status;\r\n      }\r\n\r\n</pre>\r\n</div>\r\n<p>And to following functions to gmap.cs</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>      <span style=\"color:blue\">public</span> PointLatLng? GetLatLngFromAddress(<span style=\"color:blue\">string</span> keywords, <span style=\"color:blue\">out</span> GeoCoderStatusCode status)\r\n      {\r\n          <span style=\"color:blue\">return</span> GetLatLngFromAddressUrl(MakeAddressUrl(keywords), UseGeocoderCache, <span style=\"color:blue\">out</span> status);\r\n      }\r\n\r\n      <span style=\"color:blue\">internal</span> <span style=\"color:blue\">string</span> MakeAddressUrl(<span style=\"color:blue\">string</span> keywords)\r\n      {\r\n          <span style=\"color:blue\">string</span> key = keywords.Replace(<span style=\"color:#a31515\">' '</span>, <span style=\"color:#a31515\">'+'</span>);\r\n          <span style=\"color:blue\">return</span> <span style=\"color:blue\">string</span>.Format(&amp;quot;http:<span style=\"color:green\">//maps.google.com/maps?q={0}&amp;hl={1}&amp;quot;, key, LanguageStr);</span>\r\n      }\r\n\r\n      <span style=\"color:blue\">internal</span> PointLatLng? GetLatLngFromAddressUrl(<span style=\"color:blue\">string</span> url, <span style=\"color:blue\">bool</span> useCache, <span style=\"color:blue\">out</span> GeoCoderStatusCode status)\r\n      {\r\n          status = GeoCoderStatusCode.Unknow;\r\n          PointLatLng? ret = <span style=\"color:blue\">null</span>;\r\n          <span style=\"color:blue\">try</span>\r\n          {\r\n              <span style=\"color:blue\">string</span> urlEnd = url.Substring(url.IndexOf(&amp;quot;maps?q=&amp;quot;));\r\n\r\n<span style=\"color:blue\">#if</span> !PocketPC\r\n              <span style=\"color:blue\">char</span>[] ilg = Path.GetInvalidFileNameChars();\r\n<span style=\"color:blue\">#else</span>\r\n            <span style=\"color:blue\">char</span>[] ilg = <span style=\"color:blue\">new</span> <span style=\"color:blue\">char</span>[41];\r\n            <span style=\"color:blue\">for</span>(<span style=\"color:blue\">int</span> i = 0; i &amp;lt; 32; i++)\r\n               ilg[i] = (<span style=\"color:blue\">char</span>) i;\r\n\r\n            ilg[32] = <span style=\"color:#a31515\">'&amp;quot;'</span>;\r\n            ilg[33] = <span style=\"color:#a31515\">'&amp;lt;'</span>;\r\n            ilg[34] = <span style=\"color:#a31515\">'&amp;gt;'</span>;\r\n            ilg[35] = <span style=\"color:#a31515\">'|'</span>;\r\n            ilg[36] = <span style=\"color:#a31515\">'?'</span>;\r\n            ilg[37] = <span style=\"color:#a31515\">':'</span>;\r\n            ilg[38] = <span style=\"color:#a31515\">'/'</span>;\r\n            ilg[39] = '\\\\';\r\n            ilg[39] = <span style=\"color:#a31515\">'*'</span>;\r\n<span style=\"color:blue\">#endif</span>\r\n\r\n              <span style=\"color:blue\">foreach</span> (<span style=\"color:blue\">char</span> c <span style=\"color:blue\">in</span> ilg)\r\n              {\r\n                  urlEnd = urlEnd.Replace(c, <span style=\"color:#a31515\">'_'</span>);\r\n              }\r\n\r\n              <span style=\"color:blue\">string</span> addr = useCache ? Cache.Instance.GetGeocoderFromCache(urlEnd) : <span style=\"color:blue\">string</span>.Empty;\r\n\r\n              <span style=\"color:blue\">if</span> (<span style=\"color:blue\">string</span>.IsNullOrEmpty(addr))\r\n              {\r\n                  HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\r\n                  <span style=\"color:blue\">if</span> (Proxy != <span style=\"color:blue\">null</span>)\r\n                  {\r\n                      request.Proxy = Proxy;\r\n<span style=\"color:blue\">#if</span> !PocketPC\r\n                      request.PreAuthenticate = <span style=\"color:blue\">true</span>;\r\n<span style=\"color:blue\">#endif</span>\r\n                  }\r\n                  <span style=\"color:blue\">else</span>\r\n                  {\r\n<span style=\"color:blue\">#if</span> !PocketPC\r\n                      request.Proxy = WebRequest.DefaultWebProxy;\r\n<span style=\"color:blue\">#else</span>\r\n                  request.Proxy = GlobalProxySelection.GetEmptyWebProxy();\r\n<span style=\"color:blue\">#endif</span>\r\n                  }\r\n\r\n                  request.UserAgent = UserAgent;\r\n                  request.Timeout = Timeout;\r\n                  request.ReadWriteTimeout = Timeout * 6;\r\n                  request.KeepAlive = <span style=\"color:blue\">false</span>;\r\n\r\n                  <span style=\"color:blue\">using</span> (HttpWebResponse response = request.GetResponse() <span style=\"color:blue\">as</span> HttpWebResponse)\r\n                  {\r\n                      <span style=\"color:blue\">using</span> (Stream responseStream = response.GetResponseStream())\r\n                      {\r\n                          <span style=\"color:blue\">using</span> (StreamReader read = <span style=\"color:blue\">new</span> StreamReader(responseStream))\r\n                          {\r\n                              addr = read.ReadToEnd();\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n\r\n              <span style=\"color:green\">// parse values</span>\r\n              <span style=\"color:blue\">if</span> (addr != String.Empty)\r\n              {\r\n                  <span style=\"color:blue\">var</span> lt_ln_s = addr.IndexOf(&amp;quot;latlng:{&amp;quot;);\r\n                  <span style=\"color:blue\">if</span> (lt_ln_s != -1)\r\n                  {\r\n                      <span style=\"color:blue\">var</span> lt_ln_e = addr.IndexOf(&amp;quot;}&amp;quot;, lt_ln_s);\r\n                      <span style=\"color:blue\">if</span> (lt_ln_e != -1)\r\n                      {\r\n                          <span style=\"color:blue\">try</span>\r\n                          {\r\n                              <span style=\"color:blue\">var</span> ltlns = addr.Substring(lt_ln_s, lt_ln_e - lt_ln_s);\r\n                              <span style=\"color:blue\">var</span> lts = ltlns.Substring(12, 18);\r\n                              <span style=\"color:blue\">var</span> ltn = ltlns.Substring(35, 18);\r\n                              <span style=\"color:blue\">double</span> lat = <span style=\"color:blue\">double</span>.Parse(lts, CultureInfo.InvariantCulture);\r\n                              <span style=\"color:blue\">double</span> lng = <span style=\"color:blue\">double</span>.Parse(ltn, CultureInfo.InvariantCulture);\r\n                              status = GeoCoderStatusCode.G_GEO_SUCCESS;\r\n                              ret = <span style=\"color:blue\">new</span> PointLatLng(lat, lng);\r\n                          }\r\n                          <span style=\"color:blue\">catch</span> (Exception)\r\n                          {\r\n                              <span style=\"color:blue\">throw</span>;\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          <span style=\"color:blue\">catch</span> (Exception ex)\r\n          {\r\n              ret = <span style=\"color:blue\">null</span>;\r\n              Debug.WriteLine(&amp;quot;GetLatLngFromGeocoderUrl: &amp;quot; + ex.ToString());\r\n          }\r\n          <span style=\"color:blue\">return</span> ret;\r\n      }\r\n\r\nNow on calling function SetCurrentPositionByKeywords2 you can search without geocoding.<br>Only problem is that if Google changes the answer then the function will not work.<br>Perhaps you can find a more elegant solution of this problem.</pre>\r\n</div>",
    "PostedDate": "2010-08-12T01:43:29.567-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]