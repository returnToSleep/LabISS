[
  {
    "Id": "855074",
    "ThreadId": "361301",
    "Html": "\r\n<p>Hi radioman,</p>\r\n<p>I noticed that the GMapControl doesn't have a way to zoom on visible polygons or on all objects of a overlay.</p>\r\n<p>So I coded these methods myself, and I'd like to suggest the use of then in the nexts builds.</p>\r\n<p>Here is my code on GMaps.NET.WindowsForms.GMapControl.cs:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n      <span style=\"color:gray\">///</span><span style=\"color:green\"> gets rectangle with all objects inside</span>\r\n      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;overlayId&quot;&gt;</span><span style=\"color:green\">overlay id or null to check all&lt;/param&gt;</span>\r\n      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;returns&gt;</span><span style=\"color:gray\">&lt;/returns&gt;</span>\r\n      <span style=\"color:blue\">public</span> RectLatLng? GetRectOfAllPolygons( <span style=\"color:blue\">string</span> overlayId )\r\n      {\r\n          RectLatLng? ret = <span style=\"color:blue\">null</span>;\r\n\r\n          <span style=\"color:blue\">double</span> left = <span style=\"color:blue\">double</span>.MaxValue;\r\n          <span style=\"color:blue\">double</span> top = <span style=\"color:blue\">double</span>.MinValue;\r\n          <span style=\"color:blue\">double</span> right = <span style=\"color:blue\">double</span>.MinValue;\r\n          <span style=\"color:blue\">double</span> bottom = <span style=\"color:blue\">double</span>.MaxValue;\r\n\r\n          <span style=\"color:blue\">foreach</span> ( GMapOverlay o <span style=\"color:blue\">in</span> Overlays )\r\n          {\r\n              <span style=\"color:blue\">if</span> ( overlayId == <span style=\"color:blue\">null</span> || o.Id == overlayId )\r\n              {\r\n                  <span style=\"color:blue\">if</span> ( o.IsVisibile &amp;&amp; o.Polygons.Count &gt; 0 )\r\n                  {\r\n                      <span style=\"color:blue\">foreach</span> ( GMapPolygon poly <span style=\"color:blue\">in</span> o.Polygons )\r\n                      {\r\n                          <span style=\"color:blue\">if</span> ( poly.IsVisible &amp;&amp; poly.From.HasValue &amp;&amp; poly.To.HasValue )\r\n                          {\r\n                              <span style=\"color:blue\">foreach</span> ( PointLatLng p <span style=\"color:blue\">in</span> poly.Points )\r\n                              {\r\n                                  <span style=\"color:green\">// left</span>\r\n                                  <span style=\"color:blue\">if</span> ( p.Lng &lt; left )\r\n                                  {\r\n                                      left = p.Lng;\r\n                                  }\r\n\r\n                                  <span style=\"color:green\">// top</span>\r\n                                  <span style=\"color:blue\">if</span> ( p.Lat &gt; top )\r\n                                  {\r\n                                      top = p.Lat;\r\n                                  }\r\n\r\n                                  <span style=\"color:green\">// right</span>\r\n                                  <span style=\"color:blue\">if</span> ( p.Lng &gt; right )\r\n                                  {\r\n                                      right = p.Lng;\r\n                                  }\r\n\r\n                                  <span style=\"color:green\">// bottom</span>\r\n                                  <span style=\"color:blue\">if</span> ( p.Lat &lt; bottom )\r\n                                  {\r\n                                      bottom = p.Lat;\r\n                                  }\r\n                              }\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n\r\n          <span style=\"color:blue\">if</span> ( left != <span style=\"color:blue\">double</span>.MaxValue &amp;&amp; right != <span style=\"color:blue\">double</span>.MinValue &amp;&amp; top != <span style=\"color:blue\">double</span>.MinValue &amp;&amp; bottom != <span style=\"color:blue\">double</span>.MaxValue )\r\n          {\r\n              ret = RectLatLng.FromLTRB( left, top, right, bottom );\r\n          }\r\n\r\n          <span style=\"color:blue\">return</span> ret;\r\n      }\r\n\r\n      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n      <span style=\"color:gray\">///</span><span style=\"color:green\"> zooms and centers all polygons</span>\r\n      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;overlayId&quot;&gt;</span><span style=\"color:green\">overlay id or null to check all&lt;/param&gt;</span>\r\n      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;returns&gt;</span><span style=\"color:gray\">&lt;/returns&gt;</span>\r\n      <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> ZoomAndCenterPolygons( <span style=\"color:blue\">string</span> overlayId )\r\n      {\r\n          RectLatLng? rect = GetRectOfAllPolygons( overlayId );\r\n          <span style=\"color:blue\">if</span> ( rect.HasValue )\r\n          {\r\n              <span style=\"color:blue\">return</span> SetZoomToFitRect( rect.Value );\r\n          }\r\n\r\n          <span style=\"color:blue\">return</span> <span style=\"color:blue\">false</span>;\r\n      }\r\n\r\n      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n      <span style=\"color:gray\">///</span><span style=\"color:green\"> zooms and centers all objects</span>\r\n      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;overlayId&quot;&gt;</span><span style=\"color:green\">overlay id or null to check all&lt;/param&gt;</span>\r\n      <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;returns&gt;</span><span style=\"color:gray\">&lt;/returns&gt;</span>\r\n      <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> ZoomAndCenterAll( <span style=\"color:blue\">string</span> overlayId )\r\n      {\r\n          <span style=\"color:green\">//grab the max of each object</span>\r\n          RectLatLng? markers = GetRectOfAllMarkers( overlayId );\r\n          RectLatLng? routes = GetRectOfAllRoutes( overlayId );\r\n          RectLatLng? polygons = GetRectOfAllPolygons( overlayId );\r\n\r\n          List&lt;RectLatLng&gt; all = <span style=\"color:blue\">new</span> List&lt;RectLatLng&gt;();\r\n\r\n          <span style=\"color:green\">//adds to the list only those with some return</span>\r\n          <span style=\"color:blue\">if</span> ( markers.HasValue ) all.Add( markers.Value );\r\n          <span style=\"color:blue\">if</span> ( routes.HasValue ) all.Add( routes.Value );\r\n          <span style=\"color:blue\">if</span> ( polygons.HasValue ) all.Add( polygons.Value );\r\n\r\n          <span style=\"color:blue\">double</span> left = <span style=\"color:blue\">double</span>.MaxValue;\r\n          <span style=\"color:blue\">double</span> top = <span style=\"color:blue\">double</span>.MinValue;\r\n          <span style=\"color:blue\">double</span> right = <span style=\"color:blue\">double</span>.MinValue;\r\n          <span style=\"color:blue\">double</span> bottom = <span style=\"color:blue\">double</span>.MaxValue;\r\n\r\n          <span style=\"color:green\">//loop through the list to build a new rect</span>\r\n          <span style=\"color:blue\">foreach</span> ( RectLatLng r <span style=\"color:blue\">in</span> all )\r\n          {\r\n              <span style=\"color:green\">// left</span>\r\n              <span style=\"color:blue\">if</span> ( r.Left &lt; left )\r\n              {\r\n                  left = r.Left;\r\n              }\r\n\r\n              <span style=\"color:green\">// top</span>\r\n              <span style=\"color:blue\">if</span> ( r.Top &gt; top )\r\n              {\r\n                  top = r.Top;\r\n              }\r\n\r\n              <span style=\"color:green\">// right</span>\r\n              <span style=\"color:blue\">if</span> ( r.Right &gt; right )\r\n              {\r\n                  right = r.Right;\r\n              }\r\n\r\n              <span style=\"color:green\">// bottom</span>\r\n              <span style=\"color:blue\">if</span> ( r.Bottom &lt; bottom )\r\n              {\r\n                  bottom = r.Bottom;\r\n              }\r\n          }\r\n\r\n          <span style=\"color:blue\">if</span> ( left != <span style=\"color:blue\">double</span>.MaxValue &amp;&amp; right != <span style=\"color:blue\">double</span>.MinValue &amp;&amp; top != <span style=\"color:blue\">double</span>.MinValue &amp;&amp; bottom != <span style=\"color:blue\">double</span>.MaxValue )\r\n          {\r\n              RectLatLng rect = RectLatLng.FromLTRB( left, top, right, bottom );\r\n\r\n              SetZoomToFitRect( rect );\r\n\r\n              <span style=\"color:blue\">return</span> <span style=\"color:blue\">true</span>;\r\n          }\r\n          <span style=\"color:blue\">else</span>\r\n          {\r\n              <span style=\"color:blue\">return</span> <span style=\"color:blue\">false</span>;\r\n          }\r\n      }\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>I hope my code proves itself useful.</p>\r\n<p>Regards,</p>\r\n<p>Cleverson Nascimento</p>\r\n",
    "PostedDate": "2012-06-28T08:56:25.777-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "858851",
    "ThreadId": "361301",
    "Html": "<p>nice, why not add ZoomAndCenterPolygon with a polygon name?</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// gets rectangle of a polygon<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;param name=\"overlayId\"&gt;overlay id or null to check all&lt;/param&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;returns&gt;&lt;/returns&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public RectLatLng? GetRectOfPolygon(string polygonName)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RectLatLng? ret = null;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double left = double.MaxValue;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double top = double.MinValue;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double right = double.MinValue;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double bottom = double.MaxValue;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (GMapOverlay o in Overlays)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (o.IsVisibile &amp;&amp; o.Polygons.Count &gt; 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (GMapPolygon poly in o.Polygons)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (poly.IsVisible &amp;&amp; poly.From.HasValue &amp;&amp; poly.To.HasValue &amp;&amp; poly.Name.Equals(polygonName))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (PointLatLng p in poly.Points)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // left<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (p.Lng &lt; left)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; left = p.Lng;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // top<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (p.Lat &gt; top)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; top = p.Lat;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // right<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (p.Lng &gt; right)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; right = p.Lng;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // bottom<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (p.Lat &lt; bottom)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bottom = p.Lat;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (left != double.MaxValue &amp;&amp; right != double.MinValue &amp;&amp; top != double.MinValue &amp;&amp; bottom != double.MaxValue)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ret = RectLatLng.FromLTRB(left, top, right, bottom);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ret;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// zooms and centers polygon<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;param name=\"overlayId\"&gt;overlay id or null to check all&lt;/param&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;returns&gt;&lt;/returns&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public bool ZoomAndCenterPolygon(string polygonName)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RectLatLng? rect = GetRectOfPolygon(polygonName);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (rect.HasValue)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return SetZoomToFitRect(rect.Value);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>",
    "PostedDate": "2012-07-08T07:30:51.063-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]