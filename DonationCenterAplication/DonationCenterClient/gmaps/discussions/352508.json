[
  {
    "Id": "824664",
    "ThreadId": "352508",
    "Html": "\r\n<p>Dear Radioman, in First Place Thanks for your excelent piece of code!!! is a fantastic Control for WinForm!!<br>\r\n<br>\r\nI need to know if your control have &quot;an reverse&quot; method of GetDistance()</p>\r\n<p>In example, i like to know (or to draw) a segment of x meters, in a line defined by (new PointLatLng(Convert.ToDouble(&quot;-34.6808729522982&quot;), Convert.ToDouble(&quot;-58.5749360918999&quot;)), (new PointLatLng(Convert.ToDouble(&quot;-34.6802310993257&quot;), Convert.ToDouble(&quot;-58.5741984844208&quot;)));\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>\r\nhave some method that giving the two points and the meters, give me a resultant point that be x meters distant from the first point ?<br>\r\nIf dont have, you happen a way for make this??&nbsp;</p>\r\n<p>Thanks a lot to you or somebody that can help me with this!!!</p>\r\n<p>And sorry to all for my poor english!</p>\r\n",
    "PostedDate": "2012-04-16T20:54:17.95-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "824735",
    "ThreadId": "352508",
    "Html": "<p>First get the bearing between points p1 and p2:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">double</span> bearing = GMapProviders.EmptyProvider.Projection.GetBearing(p1, p2);\r\n</pre>\r\n</div>\r\n<p>Then use this method:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: green;\">//Radius of the Earth</span>\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">readonly</span> <span style=\"color: blue;\">double</span> earthRadius = 6371d;\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span><span style=\"color: green;\"> Given a start point, initial bearing, and distance in km, this will calculate the destination point travelling along a (shortest distance) great circle arc.</span>\r\n        <span style=\"color: gray;\">///</span><span style=\"color: green;\"> See: http://www.movable-type.co.uk/scripts/latlong.html </span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;/summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;param name=\"startPoint\"&gt;</span><span style=\"color: green;\">The start point.&lt;/param&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;param name=\"bearing\"&gt;</span><span style=\"color: green;\">The bearing in decimal degrees.&lt;/param&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;param name=\"distance\"&gt;</span><span style=\"color: green;\">The distance in km&lt;/param&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;returns&gt;</span><span style=\"color: gray;\">&lt;/returns&gt;</span>\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> PointLatLng GetPointLatLngFromStartPoint(PointLatLng startPoint, <span style=\"color: blue;\">double</span> bearing, <span style=\"color: blue;\">double</span> distance)\r\n        {\r\n            <span style=\"color: green;\">// convert distance to angular distance in radians</span>\r\n            distance = distance / earthRadius;\r\n            <span style=\"color: green;\">// Convert bearing to Radians</span>\r\n            bearing = ToRadians(bearing);\r\n\r\n            <span style=\"color: green;\">//Convert Degrees of startpoint to radians</span>\r\n            <span style=\"color: blue;\">double</span> lat1 = ToRadians(startPoint.Lat);\r\n            <span style=\"color: blue;\">double</span> lon1 = ToRadians(startPoint.Lng);\r\n\r\n            <span style=\"color: blue;\">double</span> lat2 = Math.Asin(Math.Sin(lat1) * Math.Cos(distance) + Math.Cos(lat1) * Math.Sin(distance) * Math.Cos(bearing));\r\n            <span style=\"color: blue;\">double</span> lon2 = lon1 + Math.Atan2(Math.Sin(bearing) * Math.Sin(distance) * Math.Cos(lat1), Math.Cos(distance) - Math.Sin(lat1) * Math.Sin(lat2));\r\n            <span style=\"color: green;\">//normalise to -180..+180&ordm;</span>\r\n            lon2 = (lon2 + 3 * Math.PI) % (2 * Math.PI) - Math.PI;  \r\n\r\n            <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">new</span> PointLatLng(ToDegrees(lat2), ToDegrees(lon2));\r\n        }\r\n</pre>\r\n</div>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span><span style=\"color: green;\"> Convert given decimal degrees to radians</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;/summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;param name=\"degrees\"&gt;</span><span style=\"color: green;\">Degrees&lt;/param&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;returns&gt;</span><span style=\"color: green;\">Radians&lt;/returns&gt;</span>\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">double</span> ToRadians(<span style=\"color: blue;\">double</span> degrees)\r\n        {\r\n            <span style=\"color: blue;\">return</span> degrees * (Math.PI / 180d);\r\n        }\r\n\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span><span style=\"color: green;\"> Convert given radians to decimal degrees</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;/summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;param name=\"radians\"&gt;</span><span style=\"color: green;\">Radians&lt;/param&gt;</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;returns&gt;</span><span style=\"color: green;\">Degrees&lt;/returns&gt;</span>\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">double</span> ToDegrees(<span style=\"color: blue;\">double</span> radians)\r\n        {\r\n            <span style=\"color: blue;\">return</span> radians * (180d / Math.PI);\r\n        }\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>P.S.:&nbsp;Why do you Convert your doubles from a String??</p>\r\n<p>&nbsp;</p>\r\n<div id=\"_mcePaste\" class=\"mcePaste\" style=\"position: absolute; width: 1px; height: 1px; overflow: hidden; top: 0px; left: -10000px;\">ï»¿</div>",
    "PostedDate": "2012-04-17T01:40:44.537-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "827631",
    "ThreadId": "352508",
    "Html": "<p>Dear Xandolph, thanks for your solution!! Is Great. I had no the bearing concept!! is that i need for this propouse!!<br />Thanks for help people like me, that has not yet the experience for this!!<br /><br /><br />PD_: I Convert from String because originally this code comes from a textbox!!</p>",
    "PostedDate": "2012-04-23T20:24:52.553-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]