[
  {
    "Id": "512040",
    "ThreadId": "232189",
    "Html": "\r\n<p>Is posible to create a route log text?</p>\r\n<p>Something like this...&#65279;</p>\r\n<p>&#65279;&#65279;&#65279;===============================================================</p>\r\n<div id=\"x_panel_dir\">\r\n<div id=\"x_dir_title\">Indicaciones de ruta en coche para Calle de Aguado, 18, 33202 Gij&oacute;n</div>\r\n<div id=\"x_dir_altroutes\">\r\n<ol id=\"x_dir_altroutes_body\">\r\n<li id=\"x_altroute_0\">\r\n<div>\r\n<div>2 min</div>\r\n<div><a href=\"http://maps.google.es/\">Calle Marqu&eacute;s de Casa Vald&eacute;s</a></div>\r\n<div>900 m</div>\r\n</div>\r\n</li></ol>\r\n</div>\r\n<div id=\"x_panel_ddw0\">\r\n<table>\r\n<tbody id=\"x_step_0_-1\">\r\n<tr>\r\n<td><img src=\"http://maps.gstatic.com/intl/es_es/mapfiles/icon_greenA.png\" alt=\"\" width=\"24\" height=\"38\"></td>\r\n<td>\r\n<div id=\"x_ddw_addr_area_0\">\r\n<div id=\"x_sxaddr\">\r\n<div dir=\"ltr\">Plaza de San Miguel</div>\r\n</div>\r\n</div>\r\n</td>\r\n<td><img id=\"x_cbicon_0_-1\" src=\"http://maps.gstatic.com/intl/es_es/mapfiles/transparent.png\" alt=\"\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<div id=\"x_ddr0\">\r\n<table id=\"x_ddr_steps_0\">\r\n<tbody>\r\n<tr id=\"x_step_0_0\">\r\n<td>1.</td>\r\n<td id=\"x_dirsegtext_0_0\">Dir&iacute;gete hacia el <strong>oeste</strong> en <strong>\r\nPlaza de San Miguel</strong> hacia <strong>Calle Capua</strong></td>\r\n<td><img id=\"x_cbicon_0_0\" src=\"http://maps.gstatic.com/intl/es_es/mapfiles/transparent.png\" alt=\"\"></td>\r\n<td>\r\n<div id=\"x_sxdist\">180&nbsp;m</div>\r\n</td>\r\n</tr>\r\n<tr id=\"x_step_0_1\">\r\n<td>2.</td>\r\n<td id=\"x_dirsegtext_0_1\">Sal de la rotonda en <strong>Calle de Ruiz G&oacute;mez</strong></td>\r\n<td><img id=\"x_cbicon_0_1\" src=\"http://maps.gstatic.com/intl/es_es/mapfiles/transparent.png\" alt=\"\"></td>\r\n<td>\r\n<div id=\"x_sxdist\">110&nbsp;m</div>\r\n</td>\r\n</tr>\r\n<tr id=\"x_step_0_2\">\r\n<td>3.</td>\r\n<td id=\"x_dirsegtext_0_2\">Gira a la <strong>derecha</strong> en <strong>Calle Marqu&eacute;s de Casa Vald&eacute;s</strong></td>\r\n<td><img id=\"x_cbicon_0_2\" src=\"http://maps.gstatic.com/intl/es_es/mapfiles/transparent.png\" alt=\"\"></td>\r\n<td>\r\n<div id=\"x_sxdist\">500&nbsp;m</div>\r\n</td>\r\n</tr>\r\n<tr id=\"x_step_0_3\">\r\n<td>4.</td>\r\n<td id=\"x_dirsegtext_0_3\">Gira a la <strong>izquierda</strong> en <strong>Calle de Aguado</strong>\r\n<div>El destino est&aacute; a la derecha.</div>\r\n</td>\r\n<td><img id=\"x_cbicon_0_3\" src=\"http://maps.gstatic.com/intl/es_es/mapfiles/transparent.png\" alt=\"\"></td>\r\n<td>\r\n<div id=\"x_sxdist\">110&nbsp;m</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<div id=\"x_panel_ddw1\">\r\n<table>\r\n<tbody id=\"x_step_1_-1\">\r\n<tr>\r\n<td><img src=\"http://maps.gstatic.com/intl/es_es/mapfiles/icon_greenB.png\" alt=\"\" width=\"24\" height=\"38\"></td>\r\n<td>\r\n<div id=\"x_ddw_addr_area_1\">\r\n<div id=\"x_sxaddr\">\r\n<div dir=\"ltr\">Calle de Aguado, 18</div>\r\n<div dir=\"ltr\">33202 Gij&oacute;n</div>\r\n</div>\r\n</div>\r\n</td>\r\n<td><img id=\"x_cbicon_1_-1\" src=\"http://maps.gstatic.com/intl/es_es/mapfiles/transparent.png\" alt=\"\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p>===========================================================</p>\r\n<p>Many Thanks and Best Regards</p>\r\n",
    "PostedDate": "2010-10-25T04:05:53.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "512046",
    "ThreadId": "232189",
    "Html": "\r\n<p>yes, there is incomplete function&nbsp;GetRouteBetweenPointsKmlUrl, so you need manually parse kml</p>\r\n",
    "PostedDate": "2010-10-25T04:12:28.59-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "512065",
    "ThreadId": "232189",
    "Html": "\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:#000000\">Hi jcferalva.<br><br>This ain't the GetRouteBetweenPointsKmlUrl method but sofar its been working for me.<br><br>&nbsp;</span></pre>\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> frmDirections : Form\r\n{\r\n\tArrayList dirs = <span style=\"color:blue\">new</span> ArrayList();\r\n\tPointLatLng start;\r\n\tPointLatLng end;\r\n\t\r\n\t<span style=\"color:blue\">public</span> frmDirections(PointLatLng startLoc, PointLatLng endLoc)\r\n\t{\r\n\t\tInitializeComponent();\r\n\t\tstart = startLoc;\r\n\t\tend = endLoc;\r\n\r\n\t\tpBarLoading.Visible = <span style=\"color:blue\">true</span>;\r\n\t\tbackgroundWorker1.RunWorkerAsync();\r\n\t}\r\n\r\n\t<span style=\"color:blue\">private</span> ArrayList getDirections(PointLatLng start, PointLatLng end)\r\n\t{\r\n\t\tArrayList dirs = <span style=\"color:blue\">new</span> ArrayList();\r\n\r\n\t\tGISCoordiante dmsLAT = <span style=\"color:blue\">new</span> GISCoordiante(start.Lat, GISCoordiante.CoordinateType.latitude);\r\n\t\tGISCoordiante dmsLNG = <span style=\"color:blue\">new</span> GISCoordiante(start.Lng, GISCoordiante.CoordinateType.longitude);\r\n\r\n\t\t<span style=\"color:blue\">string</span> fromAddr = dmsLAT.toDMSString() &#43; <span style=\"color:#a31515\">&quot; &quot;</span> &#43; dmsLNG.toDMSString();\r\n\r\n\t\tdmsLAT = <span style=\"color:blue\">new</span> GISCoordiante(end.Lat, GISCoordiante.CoordinateType.latitude);\r\n\t\tdmsLNG = <span style=\"color:blue\">new</span> GISCoordiante(end.Lng, GISCoordiante.CoordinateType.longitude);\r\n\t\t<span style=\"color:blue\">string</span> toAddr = dmsLAT.toDMSString() &#43; <span style=\"color:#a31515\">&quot; &quot;</span> &#43; dmsLNG.toDMSString();\r\n\r\n\t\t<span style=\"color:blue\">string</span> html = <span style=\"color:#a31515\">&quot;&quot;</span>;\r\n\r\n\t\t<span style=\"color:blue\">string</span> startStr = <span style=\"color:#a31515\">&quot;&lt;td class=\\&quot;dirsegtext dir-step-show\\&quot; id=dirsegtext_0_&quot;</span>;\r\n\t\t<span style=\"color:blue\">string</span> checkStr = <span style=\"color:#a31515\">&quot;&quot;</span>;\r\n\t\t<span style=\"color:blue\">string</span> endStr = <span style=\"color:#a31515\">&quot;&lt;/td&gt;&lt;td&gt;&lt;img id=cbicon_0_&quot;</span>;\r\n\t\t<span style=\"color:blue\">string</span> dir = <span style=\"color:#a31515\">&quot;&quot;</span>;\r\n\t\t<span style=\"color:blue\">int</span> startIndex = 1;\r\n\t\t<span style=\"color:blue\">int</span> stopIndex = 0;\r\n\t\t<span style=\"color:blue\">int</span> index = 0;\r\n\r\n\t\tWebClient strWebClient = <span style=\"color:blue\">new</span> WebClient();\r\n\t\t<span style=\"color:blue\">string</span> pageUrl = <span style=\"color:#a31515\">&quot;http://maps.google.com/&quot;</span>;\r\n\r\n\r\n\t\t<span style=\"color:green\">//Build the page request</span>\r\n\t\tpageUrl = pageUrl &#43; <span style=\"color:#a31515\">&quot;maps?saddr=&quot;</span> &#43; fromAddr &#43; <span style=\"color:#a31515\">&quot;&amp;daddr=&quot;</span> &#43; toAddr;\r\n\r\n\t\t<span style=\"color:green\">//Get the Page Text</span>\r\n\t\thtml = strWebClient.DownloadString(pageUrl);\r\n\r\n\t\t<span style=\"color:green\">//Build the directions list</span>\r\n\t\tstartIndex = html.IndexOf(startStr) &#43; startStr.Length;\r\n\t\tstopIndex = html.IndexOf(endStr, startIndex);\r\n\r\n\t\t<span style=\"color:blue\">while</span> (startIndex &gt; 0)\r\n\t\t{\r\n\t\t\tcheckStr = startStr &#43; index &#43; <span style=\"color:#a31515\">&quot;&gt;&quot;</span>;\r\n\t\t\tstartIndex = html.IndexOf(checkStr) &#43; checkStr.Length;\r\n\t\t\tstopIndex = html.IndexOf(endStr, startIndex);\r\n\r\n\t\t\t<span style=\"color:blue\">if</span> (stopIndex &gt; startIndex)\r\n\t\t\t{\r\n\t\t\t\t<span style=\"color:green\">//(index &#43; 1).ToString() &#43; &quot;: &quot; &#43; '</span>\r\n\t\t\t\tdir = (index &#43; 1).ToString() &#43; <span style=\"color:#a31515\">&quot;: &quot;</span> &#43; html.Substring(startIndex, (stopIndex - startIndex)) &#43; <span style=\"color:#a31515\">&quot;.&quot;</span>;\r\n\r\n\t\t\t\tdirs.Add(StripHTML(dir));\r\n\t\t\t\thtml = html.Substring(stopIndex);\r\n\t\t\t}\r\n\t\t\t<span style=\"color:blue\">else</span>\r\n\t\t\t{ startIndex = -1; }\r\n\r\n\t\t\tindex&#43;&#43;;\r\n\t\t}\r\n\r\n\t\t<span style=\"color:blue\">return</span> dirs;\r\n\t}\r\n\r\n\t<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> StripHTML(<span style=\"color:blue\">string</span> inputString)\r\n\t{\r\n\t\t<span style=\"color:blue\">return</span> Regex.Replace(inputString.Replace(<span style=\"color:#a31515\">&quot;&amp;nbsp;&quot;</span>, <span style=\"color:#a31515\">&quot; &quot;</span>).Replace(<span style=\"color:#a31515\">&quot;/&quot;</span>, <span style=\"color:#a31515\">&quot; &quot;</span>).Replace(<span style=\"color:#a31515\">&quot;&lt;div&quot;</span>, <span style=\"color:#a31515\">&quot;. &lt;div&quot;</span>), <span style=\"color:#a31515\">&quot;&lt;.*?&gt;&quot;</span>, <span style=\"color:blue\">string</span>.Empty);\r\n\t}\r\n\r\n\t<span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> backgroundWorker1_DoWork(<span style=\"color:blue\">object</span> sender, DoWorkEventArgs e)\r\n\t{\r\n\t\tdirs = getDirections(start, end);\r\n\t}\r\n\r\n\t<span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> backgroundWorker1_RunWorkerCompleted(<span style=\"color:blue\">object</span> sender, RunWorkerCompletedEventArgs e)\r\n\t{\r\n\t\tlstDirections.Items.Clear();\r\n\r\n\t\t<span style=\"color:blue\">if</span> (dirs.Count &gt; 0)\r\n\t\t{\r\n\t\t\t<span style=\"color:blue\">foreach</span> (<span style=\"color:blue\">string</span> dir <span style=\"color:blue\">in</span> dirs)\r\n\t\t\t{\r\n\t\t\t\tlstDirections.Items.Add(dir);\r\n\t\t\t}\r\n\t\t}\r\n\t\t<span style=\"color:blue\">else</span>\r\n\t\t{\r\n\t\t\tlstDirections.Items.Add(<span style=\"color:#a31515\">&quot;No Directions Found.&quot;</span>);\r\n\t\t}\r\n\r\n\t\tpBarLoading.Visible = <span style=\"color:blue\">false</span>;\r\n\t}\r\n}\r\n    \r\n\r\n\r\n<span style=\"color:green\">/* GIS COORDINATE CLASS */</span>\r\n\r\n <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> GISCoordiante\r\n{\r\n\t<span style=\"color:blue\">#region</span> Enums\r\n\r\n\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">enum</span> CoordinateType\r\n\t{\r\n\t\tlongitude,\r\n\t\tlatitude\r\n\t}\r\n\r\n\t<span style=\"color:blue\">#endregion</span>\r\n\r\n\t<span style=\"color:blue\">#region</span> Variables &amp; Properties\r\n\r\n\t<span style=\"color:blue\">private</span> <span style=\"color:blue\">double</span> degrees;\r\n\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">double</span> Degrees\r\n\t{\r\n\t\t<span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> degrees; }\r\n\t\t<span style=\"color:blue\">set</span> { degrees = value; }\r\n\t}\r\n\r\n\t<span style=\"color:blue\">private</span> <span style=\"color:blue\">double</span> minutes;\r\n\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">double</span> Minutes\r\n\t{\r\n\t\t<span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> minutes; }\r\n\t\t<span style=\"color:blue\">set</span> { minutes = value; }\r\n\t}\r\n\r\n\t<span style=\"color:blue\">private</span> <span style=\"color:blue\">double</span> seconds;\r\n\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">double</span> Seconds\r\n\t{\r\n\t\t<span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> seconds; }\r\n\t\t<span style=\"color:blue\">set</span> { seconds = value; }\r\n\t}\r\n\r\n\t<span style=\"color:blue\">private</span> <span style=\"color:blue\">char</span> heading;\r\n\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">char</span> Heading\r\n\t{\r\n\t\t<span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> heading; }\r\n\t\t<span style=\"color:blue\">set</span> { heading = value; }\r\n\t}\r\n\r\n\t<span style=\"color:blue\">private</span> <span style=\"color:blue\">string</span> dmsString;\r\n\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> DMSString\r\n\t{\r\n\t\t<span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> dmsString; }\r\n\t\t<span style=\"color:blue\">set</span> { dmsString = value; }\r\n\t}\r\n\t<span style=\"color:blue\">#endregion</span>\r\n\r\n\t<span style=\"color:blue\">#region</span> Constructors\r\n\r\n\t<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n\t<span style=\"color:gray\">///</span><span style=\"color:green\"> Empty Constructor</span>\r\n\t<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n\t<span style=\"color:blue\">public</span> GISCoordiante()\r\n\t{ }\r\n\r\n\t<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n\t<span style=\"color:gray\">///</span><span style=\"color:green\"> DegreesMinutesSeconds Constructor</span>\r\n\t<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n\t<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;coordinate&quot;&gt;</span><span style=\"color:green\">Decimal Coordinate&lt;/param&gt;</span>\r\n\t<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;type&quot;&gt;</span><span style=\"color:green\">CoordinateType longitude or latitude &lt;/param&gt;</span>\r\n\t<span style=\"color:blue\">public</span> GISCoordiante(<span style=\"color:blue\">double</span> coordinate, CoordinateType type)\r\n\t{\r\n\t\t<span style=\"color:green\">// Set flag if number is negative</span>\r\n\t\t<span style=\"color:blue\">bool</span> neg = coordinate &lt; 0d;\r\n\r\n\t\t<span style=\"color:green\">// Work with a positive number</span>\r\n\t\tcoordinate = Math.Abs(coordinate);\r\n\r\n\t\t<span style=\"color:green\">// Get d/m/s components</span>\r\n\t\t<span style=\"color:blue\">double</span> d = Math.Floor(coordinate);\r\n\t\tcoordinate -= d;\r\n\t\tcoordinate *= 60;\r\n\t\tDegrees = d;\r\n\r\n\t\t<span style=\"color:blue\">double</span> m = Math.Floor(coordinate);\r\n\t\tcoordinate -= m;\r\n\t\tcoordinate *= 60;\r\n\t\tMinutes = m;\r\n\r\n\t\t<span style=\"color:blue\">double</span> s = Math.Round(coordinate);\r\n\t\tSeconds = s;\r\n\r\n\t\t<span style=\"color:green\">// Create padding character</span>\r\n\t\t<span style=\"color:blue\">char</span> pad;\r\n\t\t<span style=\"color:blue\">char</span>.TryParse(<span style=\"color:#a31515\">&quot;0&quot;</span>, <span style=\"color:blue\">out</span> pad);\r\n\r\n\t\t<span style=\"color:green\">// Create d/m/s strings</span>\r\n\t\t<span style=\"color:blue\">string</span> dd = d.ToString();\r\n\t\t<span style=\"color:blue\">string</span> mm = m.ToString().PadLeft(2, pad);\r\n\t\t<span style=\"color:blue\">string</span> ss = s.ToString().PadLeft(2, pad);\r\n\r\n\t\t<span style=\"color:green\">// Append d/m/s</span>\r\n\t\tDMSString = <span style=\"color:blue\">string</span>.Format(<span style=\"color:#a31515\">&quot;{0}�{1}'{2}\\&quot;&quot;</span>, dd, mm, ss);\r\n\r\n\t\t<span style=\"color:green\">// Append compass heading</span>\r\n\t\t<span style=\"color:blue\">switch</span> (type)\r\n\t\t{\r\n\t\t\t<span style=\"color:blue\">case</span> CoordinateType.longitude:\r\n\t\t\t\tDMSString &#43;= neg ? <span style=\"color:#a31515\">&quot;W&quot;</span> : <span style=\"color:#a31515\">&quot;E&quot;</span>;\r\n\t\t\t\tHeading = neg ? <span style=\"color:#a31515\">'W'</span> : <span style=\"color:#a31515\">'E'</span>;\r\n\t\t\t\t<span style=\"color:blue\">break</span>;\r\n\t\t\t<span style=\"color:blue\">case</span> CoordinateType.latitude:\r\n\t\t\t\tDMSString &#43;= neg ? <span style=\"color:#a31515\">&quot;S&quot;</span> : <span style=\"color:#a31515\">&quot;N&quot;</span>;\r\n\t\t\t\tHeading = neg ? <span style=\"color:#a31515\">'S'</span> : <span style=\"color:#a31515\">'N'</span>;\r\n\t\t\t\t<span style=\"color:blue\">break</span>;\r\n\t\t}\r\n\t}\r\n\r\n\t<span style=\"color:blue\">#endregion</span>\r\n\r\n\t<span style=\"color:blue\">#region</span> Methods\r\n\r\n\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> toDMSString()\r\n\t{\r\n\t\t<span style=\"color:blue\">return</span> DMSString;\r\n\t}\r\n\r\n\t<span style=\"color:blue\">#endregion</span>\r\n}\r\n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2010-10-25T04:57:15.707-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "674219",
    "ThreadId": "232189",
    "Html": "<p>direction provider now is implemented for google map</p>",
    "PostedDate": "2011-09-20T07:53:54.227-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]