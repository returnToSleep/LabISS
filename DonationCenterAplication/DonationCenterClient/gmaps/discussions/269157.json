[
  {
    "Id": "658492",
    "ThreadId": "269157",
    "Html": "\r\n<p>I'm wondering if there is already a way to do this or if someone has figured out a way to do this:</p>\r\n<p>How can I make the map smoothly pan from one point to another? &nbsp;</p>\r\n",
    "PostedDate": "2011-08-15T13:02:48.367-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "658514",
    "ThreadId": "269157",
    "Html": "<p>nop, idea queued ;}</p>",
    "PostedDate": "2011-08-15T13:30:30.627-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "658818",
    "ThreadId": "269157",
    "Html": "<p>Good to know! Thanks.</p>\r\n<p>This project is very impressive :)</p>",
    "PostedDate": "2011-08-16T06:32:59.587-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "672922",
    "ThreadId": "269157",
    "Html": "<p>I've enabled animations for panning but sometimes it is not smooth at all, and I'm puzzled.</p>\r\n<p>ï»¿</p>\r\n<p>Implement these into the MainWindow:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">        public</span> System.Windows.Point MapPoint\r\n        {\r\n            <span style=\"color: blue;\">get</span> { <span style=\"color: blue;\">return</span> (System.Windows.Point)GetValue(MapPointProperty); }\r\n            <span style=\"color: blue;\">set</span> { SetValue(MapPointProperty, value); }\r\n        }\r\n\r\n\r\n        <span style=\"color: green;\">// Using a DependencyProperty as the backing store for point.  This enables animation, styling, binding, etc...</span>\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">readonly</span> DependencyProperty MapPointProperty =\r\n               DependencyProperty.Register(<span style=\"color: #a31515;\">\"MapPoint\"</span>, <span style=\"color: blue;\">typeof</span>(System.Windows.Point), <span style=\"color: blue;\">typeof</span>(GMapControl), <span style=\"color: blue;\">new</span> PropertyMetadata(<span style=\"color: blue;\">new</span> Point(), OnMapPointPropertyChanged));\r\n\r\n\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">void</span> OnMapPointPropertyChanged(DependencyObject source,\r\n        DependencyPropertyChangedEventArgs e)\r\n        {\r\n            Point temp = (Point)e.NewValue;\r\n            PointLatLng gmapPoint = <span style=\"color: blue;\">new</span> PointLatLng(temp.X, temp.Y);\r\n            (source <span style=\"color: blue;\">as</span> GMapControl).Position = gmapPoint;\r\n        }<br /><br /><br />\r\n</pre>\r\n<p>Instantiate the animation with something like this:</p>\r\n<p>&nbsp;</p>\r\n</div>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>        PointAnimation panMap = <span style=\"color: blue;\">new</span> PointAnimation();\r\n        panMap.Duration = TimeSpan.FromSeconds(1);<span style=\"color: green;\">&nbsp;</span>\r\n        panMap.From = <span style=\"color: blue;\">new</span> Point(MainMap.Position.Lat, MainMap.Position.Lng);\r\n        panMap.To = <span style=\"color: blue;\">new</span> Point(pointTo.Lat, pointTo.Lng);\r\n        Storyboard.SetTarget(panMap, MainMap);\r\n        Storyboard.SetTargetProperty(panMap, <span style=\"color: blue;\">new</span> PropertyPath(MapPointProperty));\r\n        panMapStoryBoard.Children.Add(panMap);\r\n        panMapStoryBoard.Begin(<span style=\"color: blue;\">this</span>);\r\n</pre>\r\n<br /><br /></div>",
    "PostedDate": "2011-09-16T13:51:21.307-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "672933",
    "ThreadId": "269157",
    "Html": "<p>indeed, you change geo position, but to have really smooth panning one must animate map translate matrix, to support such actions positioning subsystem must be redone... to bad i have not much 'free' time, waste it at work...</p>",
    "PostedDate": "2011-09-16T14:30:35.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]